{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js\",\n    _s = $RefreshSig$();\n\nimport { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareablePopSizeState } from './PopSlider.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = () => {\n  _s();\n\n  const [running, setRunning] = useBetween(ShareableRunningState);\n  const [temperature, setTemperature] = useBetween(ShareableTemperatureState);\n  const [sodium, setSodium] = useBetween(ShareableSodiumState);\n  const [magnesium, setMagnesium] = useBetween(ShareableMagnesiumState);\n  const [popSize, setPopSize] = useBetween(ShareablePopSizeState);\n  const [WT_seq, setWT] = useBetween(ShareableWTState);\n  const [SNP_seq, setSNP] = useBetween(ShareableSNPState);\n  var optimizer;\n  var probe_params = {\n    WT: WT_seq,\n    SNP: SNP_seq,\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: parseFloat(temperature),\n      sodium: parseFloat(sodium) / 1000.0,\n      magnesium: parseFloat(magnesium) / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n\n  const handleStart = (event, newValue) => {\n    optimizer = Optimizer(probe_params, popSize);\n    setRunning(true);\n    optimizer.run();\n  };\n\n  const handleStop = (event, newValue) => {\n    setRunning(false);\n    optimizer.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"startstopbuttons\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"startbutton\",\n      variant: \"contained\",\n      disabled: running,\n      color: \"primary\",\n      onClick: handleStart,\n      children: \"Optimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stopbutton\",\n      variant: \"contained\",\n      disabled: !running,\n      color: \"default\",\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Buttons, \"teM1+oYI0CMZa9fpIioVYeWnZdk=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js"],"names":["ShareableRunningState","ShareableTemperatureState","ShareableSodiumState","ShareableMagnesiumState","ShareablePopSizeState","ShareableWTState","ShareableSNPState","Optimizer","Button","useBetween","Buttons","running","setRunning","temperature","setTemperature","sodium","setSodium","magnesium","setMagnesium","popSize","setPopSize","WT_seq","setWT","SNP_seq","setSNP","optimizer","probe_params","WT","SNP","minlength","mut_rate","concentrations","non_mut_target","mut_target","probeF","probeQ","sink","sinkC","params","parseFloat","beta","truncations","handleStart","event","newValue","run","handleStop","reset"],"mappings":"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","sourcesContent":["import { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareablePopSizeState } from './PopSlider.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useBetween } from 'use-between';\n\nconst Buttons = () => {\n\n    const [running, setRunning] = useBetween(ShareableRunningState);\n    const [temperature, setTemperature] = useBetween(ShareableTemperatureState);\n    const [sodium, setSodium] = useBetween(ShareableSodiumState);\n    const [magnesium, setMagnesium] = useBetween(ShareableMagnesiumState);\n    const [popSize, setPopSize] = useBetween(ShareablePopSizeState);\n    const [WT_seq, setWT] = useBetween(ShareableWTState);\n    const [SNP_seq, setSNP] = useBetween(ShareableSNPState);\n    var optimizer;\n    var probe_params = {\n        WT:WT_seq,\n        SNP:SNP_seq,\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n\n    const handleStart = (event, newValue) => {\n        optimizer = Optimizer(probe_params, popSize);\n        setRunning(true);\n        optimizer.run();\n    };\n    const handleStop = (event, newValue) => {\n        setRunning(false);\n        optimizer.reset();\n    };\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={handleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={handleStop}>\n                Stop\n            </Button>\n        </div>\n    );\n};\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}