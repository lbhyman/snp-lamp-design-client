{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design/react-app/src/SequenceEntry.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react'; //var fetch = require('node-fetch');\n\nimport NodeFetch from 'node-fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SequenceEntry = () => {\n  _s();\n\n  const [WT, setWT] = useState();\n  const [SNP, setSNP] = useState();\n\n  const sendUpdate = () => {\n    var data = {\n      'WT': WT,\n      'SNP': SNP\n    };\n    NodeFetch('http://127.0.0.1:5000/send_input', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      return response.text();\n    });\n  };\n  /*\n  const handleWT = (event, newValue) => {\n      setWT(newValue);\n      sendUpdate();\n  };\n   const handleSNP = (event, newValue) => {\n      setSNP(newValue);\n      sendUpdate();\n  };*/\n\n\n  useEffect(() => {\n    const interval2 = setInterval(() => {\n      sendUpdate();\n    }, 1000);\n    return () => {\n      clearInterval(interval2);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sequenceentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"non-mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"non-mut\",\n        children: \"WT Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"non-mut\",\n        name: \"non-mut\",\n        onChange: i => setWT(i.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"mut\",\n        children: \"Mutated Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"mut\",\n        name: \"mut\",\n        onChange: i => setSNP(i.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SequenceEntry, \"ybTrm6x7xX/AOjSfamd7ASAOJnk=\");\n\n_c = SequenceEntry;\nexport default SequenceEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"SequenceEntry\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design/react-app/src/SequenceEntry.js"],"names":["useState","useEffect","NodeFetch","SequenceEntry","WT","setWT","SNP","setSNP","sendUpdate","data","headers","method","body","JSON","stringify","then","response","text","interval2","setInterval","clearInterval","i","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcL,QAAQ,EAA5B;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,EAA9B;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAG;AAAC,YAAML,EAAP;AAAW,aAAOE;AAAlB,KAAX;AAEAJ,IAAAA,SAAS,CAAC,kCAAD,EACf;AAACQ,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAAV;AACAC,MAAAA,MAAM,EAAE,MADR;AAEAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFN,KADe,CAAT,CAIGM,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAND;AAOH,GAVD;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGIhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,SAAS,GAAGC,WAAW,CAAC,MAAM;AAChCX,MAAAA,UAAU;AACb,KAF4B,EAE1B,IAF0B,CAA7B;AAGA,WAAO,MAAM;AACXY,MAAAA,aAAa,CAACF,SAAD,CAAb;AACD,KAFD;AAGD,GAPM,EAOJ,EAPI,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,cAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAgC,QAAA,IAAI,EAAC,SAArC;AAA+C,QAAA,QAAQ,EAAEG,CAAC,IAAIhB,KAAK,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,UAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,KAAtB;AAA4B,QAAA,IAAI,EAAC,KAAjC;AAAuC,QAAA,QAAQ,EAAEF,CAAC,IAAId,MAAM,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhDD;;GAAMpB,a;;KAAAA,a;AAkDN,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\n//var fetch = require('node-fetch');\nimport NodeFetch from 'node-fetch';\n\nconst SequenceEntry = () => {\n    const [WT, setWT] = useState();\n    const [SNP, setSNP] = useState();\n\n    const sendUpdate = () => {\n        var data = {'WT': WT, 'SNP': SNP};\n\n        NodeFetch('http://127.0.0.1:5000/send_input', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data)\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    /*\n    const handleWT = (event, newValue) => {\n        setWT(newValue);\n        sendUpdate();\n    };\n\n    const handleSNP = (event, newValue) => {\n        setSNP(newValue);\n        sendUpdate();\n    };*/\n\n    useEffect(() => {\n        const interval2 = setInterval(() => {\n            sendUpdate();\n        }, 1000);\n        return () => {\n          clearInterval(interval2);\n        };\n      }, []);\n\n    return (\n        <div className=\"sequenceentry\">\n            <div class=\"seq-form\" id=\"non-mut-form\">\n                <label for=\"non-mut\">WT Sequence</label>\n                <input type=\"text\" id=\"non-mut\" name=\"non-mut\" onChange={i => setWT(i.target.value)} />\n            </div>\n            <div class=\"seq-form\" id=\"mut-form\">\n                <label for=\"mut\">Mutated Sequence</label>\n                <input type=\"text\" id=\"mut\" name=\"mut\" onChange={i => setSNP(i.target.value)} />\n            </div>\n        </div>\n    );\n};\n\nexport default SequenceEntry;"]},"metadata":{},"sourceType":"module"}