{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShareableProbeParams = () => {\n  _s();\n\n  const [probeParams, setProbeParams] = useState(null);\n  return {\n    probeParams,\n    setProbeParams\n  };\n};\n\n_s(ShareableProbeParams, \"qrHi543c2UwUNtfpTefecHSPPF4=\");\n\n_c = ShareableProbeParams;\nexport const ShareableStartSignal = () => {\n  _s2();\n\n  const [startSignal, setStartSignal] = useState(false);\n  return {\n    startSignal,\n    setStartSignal\n  };\n};\n\n_s2(ShareableStartSignal, \"9McV1jq+SEPDqEGm9O9z5Rr2Gog=\");\n\n_c2 = ShareableStartSignal;\n\nconst Buttons = () => {\n  _s4();\n\n  var _s3 = $RefreshSig$();\n\n  const {\n    running,\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    temperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium\n  } = useBetween(ShareableMagnesiumState);\n  const {\n    WT_seq\n  } = useBetween(ShareableWTState);\n  const {\n    SNP_seq\n  } = useBetween(ShareableSNPState);\n  var params = {\n    WT: WT_seq,\n    SNP: SNP_seq,\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: parseFloat(temperature),\n      sodium: parseFloat(sodium) / 1000.0,\n      magnesium: parseFloat(magnesium) / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n  const [probe_params, setProbe_params] = useState(params);\n  const {\n    setOptimizer\n  } = useBetween(ShareableOptimizer);\n  setOptimizer(Optimizer({\n    probe_params\n  }));\n\n  const HandleStart = () => {\n    var params = {\n      WT: WT_seq,\n      SNP: SNP_seq,\n      minlength: 6,\n      mut_rate: 0.5,\n      concentrations: {\n        non_mut_target: 1e-7,\n        mut_target: 1e-7,\n        probeF: 1e-7,\n        probeQ: 1e-7,\n        sink: 1e-7,\n        sinkC: 1e-7\n      },\n      params: {\n        temperature: parseFloat(temperature),\n        sodium: parseFloat(sodium) / 1000.0,\n        magnesium: parseFloat(magnesium) / 1000.0\n      },\n      beta: [0, 0, 0, 0],\n      truncations: []\n    };\n    setOptimizer(Optimizer({\n      params\n    }));\n    var opt = optimizer.run();\n    setRunning(true);\n    return null;\n  };\n\n  const HandleStop = () => {\n    _s3();\n\n    const {\n      optimizer\n    } = useBetween(ShareableOptimizer);\n    const {\n      setRunning\n    } = useBetween(ShareableRunningState);\n    setRunning(false);\n    optimizer.reset();\n    return null;\n  };\n\n  _s3(HandleStop, \"KIt1TwK/dMC50eoknZfQE394cvw=\", false, function () {\n    return [useBetween, useBetween];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"startstopbuttons\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"startbutton\",\n      variant: \"contained\",\n      disabled: running,\n      color: \"primary\",\n      onClick: HandleStart,\n      children: \"Optimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stopbutton\",\n      variant: \"contained\",\n      disabled: !running,\n      color: \"default\",\n      onClick: HandleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandleStart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandleStop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Optimizer, {\n      probe_params: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s4(Buttons, \"Yqw5hResjbINDAHFj9hi6P9ZYwc=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c3 = Buttons;\nexport default Buttons;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ShareableProbeParams\");\n$RefreshReg$(_c2, \"ShareableStartSignal\");\n$RefreshReg$(_c3, \"Buttons\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js"],"names":["ShareableRunningState","ShareableTemperatureState","ShareableSodiumState","ShareableMagnesiumState","ShareableWTState","ShareableSNPState","Optimizer","Button","useState","useBetween","ShareableProbeParams","probeParams","setProbeParams","ShareableStartSignal","startSignal","setStartSignal","Buttons","running","setRunning","temperature","sodium","magnesium","WT_seq","SNP_seq","params","WT","SNP","minlength","mut_rate","concentrations","non_mut_target","mut_target","probeF","probeQ","sink","sinkC","parseFloat","beta","truncations","probe_params","setProbe_params","setOptimizer","ShareableOptimizer","HandleStart","opt","optimizer","run","HandleStop","reset"],"mappings":"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","sourcesContent":["import { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\n\nexport const ShareableProbeParams = () => {\n    const [probeParams, setProbeParams] = useState(null);\n    return {\n        probeParams,\n        setProbeParams\n    };\n};\n\nexport const ShareableStartSignal = () => {\n    const [startSignal, setStartSignal] = useState(false);\n    return {\n        startSignal,\n        setStartSignal\n    };\n};\n\n\n\nconst Buttons = () => {\n\n    const { running, setRunning } = useBetween(ShareableRunningState);\n    const { temperature } = useBetween(ShareableTemperatureState);\n    const { sodium } = useBetween(ShareableSodiumState);\n    const { magnesium } = useBetween(ShareableMagnesiumState);\n    const { WT_seq } = useBetween(ShareableWTState);\n    const { SNP_seq } = useBetween(ShareableSNPState);\n    var params = {\n        WT:WT_seq,\n        SNP:SNP_seq,\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n    const [probe_params, setProbe_params] = useState(params);\n    const { setOptimizer } = useBetween(ShareableOptimizer);\n    setOptimizer(Optimizer({ probe_params }));\n\n    const HandleStart = () => {\n        var params = {\n            WT:WT_seq,\n            SNP:SNP_seq,\n            minlength:6,\n            mut_rate:0.5,\n            concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n            params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n            beta:[0,0,0,0],\n            truncations:[]\n        };\n        setOptimizer(Optimizer({ params }));\n        var opt = optimizer.run();\n        setRunning(true);\n        return null;\n    };\n\n    const HandleStop = () => {\n        const { optimizer } = useBetween(ShareableOptimizer);\n        const { setRunning } = useBetween(ShareableRunningState);\n        setRunning(false);\n        optimizer.reset();\n        return null;\n    };\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={HandleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={HandleStop}>\n                Stop\n            </Button>\n            <HandleStart />\n            <HandleStop />\n            <Optimizer probe_params />\n        </div>\n    )\n};\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}