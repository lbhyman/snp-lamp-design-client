{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShareableOptimizer = () => {\n  _s();\n\n  const {\n    temperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium\n  } = useBetween(ShareableMagnesiumState);\n  const {\n    WT_seq\n  } = useBetween(ShareableWTState);\n  const {\n    SNP_seq\n  } = useBetween(ShareableSNPState);\n  var probe_params = {\n    WT: WT_seq,\n    SNP: SNP_seq,\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: parseFloat(temperature),\n      sodium: parseFloat(sodium) / 1000.0,\n      magnesium: parseFloat(magnesium) / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n  const [optimizer, setOptimizer] = useState(Optimizer({\n    probe_params\n  }));\n  return {\n    optimizer,\n    setOptimizer\n  };\n};\n\n_s(ShareableOptimizer, \"NBrbK5o+P9ppJDbc6KsfKP/fdZ8=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c = ShareableOptimizer;\n\nconst HandleStart = () => {\n  _s2();\n\n  var {\n    optimizer,\n    setOptimizer\n  } = useBetween(ShareableOptimizer);\n  const {\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    temperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium\n  } = useBetween(ShareableMagnesiumState);\n  const {\n    WT_seq\n  } = useBetween(ShareableWTState);\n  const {\n    SNP_seq\n  } = useBetween(ShareableSNPState);\n  var params = {\n    WT: WT_seq,\n    SNP: SNP_seq,\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: parseFloat(temperature),\n      sodium: parseFloat(sodium) / 1000.0,\n      magnesium: parseFloat(magnesium) / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n  setOptimizer(Optimizer({\n    params\n  }));\n  var opt = optimizer.run();\n  setRunning(true);\n  return null;\n};\n\n_s2(HandleStart, \"CWEESd28nvu7ycXOLuIXWIyoEHg=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c2 = HandleStart;\n\nconst HandleStop = () => {\n  _s3();\n\n  const {\n    optimizer\n  } = useBetween(ShareableOptimizer);\n  const {\n    setRunning\n  } = useBetween(ShareableRunningState);\n  setRunning(false);\n  optimizer.reset();\n  return null;\n};\n\n_s3(HandleStop, \"KIt1TwK/dMC50eoknZfQE394cvw=\", false, function () {\n  return [useBetween, useBetween];\n});\n\n_c3 = HandleStop;\n\nconst Buttons = () => {\n  _s4();\n\n  const {\n    running,\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    temperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium\n  } = useBetween(ShareableMagnesiumState);\n  const {\n    WT_seq\n  } = useBetween(ShareableWTState);\n  const {\n    SNP_seq\n  } = useBetween(ShareableSNPState);\n  var params = {\n    WT: WT_seq,\n    SNP: SNP_seq,\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: parseFloat(temperature),\n      sodium: parseFloat(sodium) / 1000.0,\n      magnesium: parseFloat(magnesium) / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n  const [probe_params, setProbe_params] = useState(params);\n  const {\n    setOptimizer\n  } = useBetween(ShareableOptimizer);\n  setOptimizer(Optimizer({\n    probe_params\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"startstopbuttons\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"startbutton\",\n      variant: \"contained\",\n      disabled: running,\n      color: \"primary\",\n      onClick: HandleStart,\n      children: \"Optimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stopbutton\",\n      variant: \"contained\",\n      disabled: !running,\n      color: \"default\",\n      onClick: HandleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandleStart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandleStop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Optimizer, {\n      probe_params: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s4(Buttons, \"Yqw5hResjbINDAHFj9hi6P9ZYwc=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c4 = Buttons;\nexport default Buttons;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShareableOptimizer\");\n$RefreshReg$(_c2, \"HandleStart\");\n$RefreshReg$(_c3, \"HandleStop\");\n$RefreshReg$(_c4, \"Buttons\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js"],"names":["ShareableRunningState","ShareableTemperatureState","ShareableSodiumState","ShareableMagnesiumState","ShareableWTState","ShareableSNPState","Optimizer","Button","useState","useBetween","ShareableOptimizer","temperature","sodium","magnesium","WT_seq","SNP_seq","probe_params","WT","SNP","minlength","mut_rate","concentrations","non_mut_target","mut_target","probeF","probeQ","sink","sinkC","params","parseFloat","beta","truncations","optimizer","setOptimizer","HandleStart","setRunning","opt","run","HandleStop","reset","Buttons","running","setProbe_params"],"mappings":"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","sourcesContent":["import { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\n\nexport const ShareableOptimizer = () => {\n    \n    const { temperature } = useBetween(ShareableTemperatureState);\n    const { sodium } = useBetween(ShareableSodiumState);\n    const { magnesium } = useBetween(ShareableMagnesiumState);\n    const { WT_seq } = useBetween(ShareableWTState);\n    const { SNP_seq } = useBetween(ShareableSNPState);\n    var probe_params = {\n        WT:WT_seq,\n        SNP:SNP_seq,\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n    const [optimizer, setOptimizer] = useState(Optimizer({ probe_params }));\n    return {\n        optimizer,\n        setOptimizer\n    }\n}\n\nconst HandleStart = () => {\n    var { optimizer, setOptimizer } = useBetween(ShareableOptimizer);\n    const { setRunning } = useBetween(ShareableRunningState);\n    const { temperature } = useBetween(ShareableTemperatureState);\n    const { sodium } = useBetween(ShareableSodiumState);\n    const { magnesium } = useBetween(ShareableMagnesiumState);\n    const { WT_seq } = useBetween(ShareableWTState);\n    const { SNP_seq } = useBetween(ShareableSNPState);\n    var params = {\n        WT:WT_seq,\n        SNP:SNP_seq,\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n    setOptimizer(Optimizer({ params }));\n    var opt = optimizer.run();\n    setRunning(true);\n    return null;\n};\n\nconst HandleStop = () => {\n    const { optimizer } = useBetween(ShareableOptimizer);\n    const { setRunning } = useBetween(ShareableRunningState);\n    setRunning(false);\n    optimizer.reset();\n    return null;\n};\n\nconst Buttons = () => {\n\n    const { running, setRunning } = useBetween(ShareableRunningState);\n    const { temperature } = useBetween(ShareableTemperatureState);\n    const { sodium } = useBetween(ShareableSodiumState);\n    const { magnesium } = useBetween(ShareableMagnesiumState);\n    const { WT_seq } = useBetween(ShareableWTState);\n    const { SNP_seq } = useBetween(ShareableSNPState);\n    var params = {\n        WT:WT_seq,\n        SNP:SNP_seq,\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n    const [probe_params, setProbe_params] = useState(params);\n    const { setOptimizer } = useBetween(ShareableOptimizer);\n    setOptimizer(Optimizer({ probe_params }));\n\n\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={HandleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={HandleStop}>\n                Stop\n            </Button>\n            <HandleStart />\n            <HandleStop />\n            <Optimizer probe_params />\n        </div>\n    )\n};\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}