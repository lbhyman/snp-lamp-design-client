{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js\",\n    _s = $RefreshSig$();\n\nimport { useBetween } from 'use-between';\nimport { useState } from 'react';\nimport { ShareableProbeParams } from './Buttons.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SequenceEntry = () => {\n  _s();\n\n  const {\n    probeParams,\n    setProbeParams\n  } = useBetween(ShareableProbeParams);\n  const [WT, setWT] = useState('');\n  const [SNP, setSNP] = useState('');\n\n  const handleWT = newValue => {\n    console.log(probeParams);\n    var copyParams = probeParams.__dict__;\n    probeParams.WT = newValue;\n    setProbeParams(probeParams);\n    console.log(probeParams);\n    setWT(newValue);\n  };\n\n  const handleSNP = newValue => {\n    var copyParams = probeParams;\n    copyParams.SNP = newValue;\n    setProbeParams(copyParams);\n    setSNP(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sequenceentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"non-mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"non-mut\",\n        children: \"WT Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: probeParams.WT,\n        id: \"non-mut\",\n        name: \"non-mut\",\n        onChange: i => handleWT(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"mut\",\n        children: \"Mutated Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: SNP,\n        id: \"mut\",\n        name: \"mut\",\n        onChange: handleSNP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SequenceEntry, \"ILX7NxYhuFu6QvkE9cgZEGsvdJM=\", false, function () {\n  return [useBetween];\n});\n\n_c = SequenceEntry;\nexport default SequenceEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"SequenceEntry\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js"],"names":["useBetween","useState","ShareableProbeParams","SequenceEntry","probeParams","setProbeParams","WT","setWT","SNP","setSNP","handleWT","newValue","console","log","copyParams","__dict__","handleSNP","i"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,oBAAT,QAAqC,cAArC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCL,UAAU,CAACE,oBAAD,CAAlD;AACA,QAAM,CAACI,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMS,QAAQ,GAAGC,QAAD,IAAc;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACA,QAAIU,UAAU,GAAGV,WAAW,CAACW,QAA7B;AACAX,IAAAA,WAAW,CAACE,EAAZ,GAAiBK,QAAjB;AACAN,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACAG,IAAAA,KAAK,CAACI,QAAD,CAAL;AACH,GAPD;;AAQA,QAAMK,SAAS,GAAGL,QAAD,IAAc;AAC3B,QAAIG,UAAU,GAAGV,WAAjB;AACAU,IAAAA,UAAU,CAACN,GAAX,GAAiBG,QAAjB;AACAN,IAAAA,cAAc,CAACS,UAAD,CAAd;AACAL,IAAAA,MAAM,CAACE,QAAD,CAAN;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,cAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEP,WAAW,CAACE,EAAtC;AAA0C,QAAA,EAAE,EAAC,SAA7C;AAAuD,QAAA,IAAI,EAAC,SAA5D;AAAsE,QAAA,QAAQ,EAAEW,CAAC,IAAIP,QAAQ,CAACO,CAAD;AAA7F;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,UAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAET,GAA1B;AAA+B,QAAA,EAAE,EAAC,KAAlC;AAAwC,QAAA,IAAI,EAAC,KAA7C;AAAmD,QAAA,QAAQ,EAAEQ;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjCD;;GAAMb,a;UAEsCH,U;;;KAFtCG,a;AAmCN,eAAeA,aAAf","sourcesContent":["import { useBetween } from 'use-between';\nimport { useState } from 'react';\nimport { ShareableProbeParams } from './Buttons.js';\n\nconst SequenceEntry = () => {\n\n    const { probeParams, setProbeParams } = useBetween(ShareableProbeParams);\n    const [WT, setWT] = useState('');\n    const [SNP, setSNP] = useState('');\n\n    const handleWT= (newValue) => {\n        console.log(probeParams);\n        var copyParams = probeParams.__dict__;\n        probeParams.WT = newValue;\n        setProbeParams(probeParams);\n        console.log(probeParams);\n        setWT(newValue);\n    };\n    const handleSNP= (newValue) => {\n        var copyParams = probeParams;\n        copyParams.SNP = newValue;\n        setProbeParams(copyParams);\n        setSNP(newValue);\n    };\n\n    return (\n        <div className=\"sequenceentry\">\n            <div class=\"seq-form\" id=\"non-mut-form\">\n                <label for=\"non-mut\">WT Sequence</label>\n                <input type=\"text\" value={probeParams.WT} id=\"non-mut\" name=\"non-mut\" onChange={i => handleWT(i)} />\n            </div>\n            <div class=\"seq-form\" id=\"mut-form\">\n                <label for=\"mut\">Mutated Sequence</label>\n                <input type=\"text\" value={SNP} id=\"mut\" name=\"mut\" onChange={handleSNP} />\n            </div>\n        </div>\n    );\n};\n\nexport default SequenceEntry;"]},"metadata":{},"sourceType":"module"}