{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { ShareableProbeParams } from './Buttons.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShareableWTState = () => {\n  _s();\n\n  const [WT, setWT] = useState('');\n  return {\n    WT,\n    setWT\n  };\n};\n\n_s(ShareableWTState, \"HTR8Cxj9V7WaJtN84/KzgC1grbo=\");\n\n_c = ShareableWTState;\nexport const ShareableSNPState = () => {\n  _s2();\n\n  const [SNP, setSNP] = useState('');\n  return {\n    SNP,\n    setSNP\n  };\n};\n\n_s2(ShareableSNPState, \"EyNlzX9xupI/g2sI/CFuWSd6Y6k=\");\n\n_c2 = ShareableSNPState;\n\nconst SequenceEntry = () => {\n  _s3();\n\n  const {\n    WT,\n    setWT\n  } = useBetween(ShareableWTState);\n  const {\n    SNP,\n    setSNP\n  } = useBetween(ShareableSNPState);\n  const {\n    probeParams,\n    setProbeParams\n  } = useBetween(ShareableProbeParams);\n\n  const handleWT = (event, newValue) => {\n    //setWT(newValue);\n    var copyParams = probeParams;\n    copyParams['WT'] = newValue;\n    setProbeParams(copyParams);\n  };\n\n  const handleSNP = (event, newValue) => {\n    //setSNP(newValue);\n    var copyParams = probeParams;\n    copyParams['SNP'] = newValue;\n    setProbeParams(copyParams);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sequenceentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"non-mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"non-mut\",\n        children: \"WT Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: WT,\n        id: \"non-mut\",\n        name: \"non-mut\",\n        onChange: handleWT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"mut\",\n        children: \"Mutated Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: SNP,\n        id: \"mut\",\n        name: \"mut\",\n        onChange: handleSNP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(SequenceEntry, \"aw+vfqcYNfTuUbezZDmcOp4Fn24=\", false, function () {\n  return [useBetween, useBetween, useBetween];\n});\n\n_c3 = SequenceEntry;\nexport default SequenceEntry;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ShareableWTState\");\n$RefreshReg$(_c2, \"ShareableSNPState\");\n$RefreshReg$(_c3, \"SequenceEntry\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js"],"names":["useState","useBetween","ShareableProbeParams","ShareableWTState","WT","setWT","ShareableSNPState","SNP","setSNP","SequenceEntry","probeParams","setProbeParams","handleWT","event","newValue","copyParams","handleSNP"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,oBAAT,QAAqC,cAArC;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcL,QAAQ,CAAC,EAAD,CAA5B;AACA,SAAO;AACHI,IAAAA,EADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CANM;;GAAMF,gB;;KAAAA,gB;AAQb,OAAO,MAAMG,iBAAiB,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,SAAO;AACHO,IAAAA,GADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CANM;;IAAMF,iB;;MAAAA,iB;;AAQb,MAAMG,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM;AAAEL,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAgBJ,UAAU,CAACE,gBAAD,CAAhC;AACA,QAAM;AAAEI,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBP,UAAU,CAACK,iBAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCV,UAAU,CAACC,oBAAD,CAAlD;;AAEA,QAAMU,QAAQ,GAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjC;AACA,QAAIC,UAAU,GAAGL,WAAjB;AACAK,IAAAA,UAAU,CAAC,IAAD,CAAV,GAAmBD,QAAnB;AACAH,IAAAA,cAAc,CAACI,UAAD,CAAd;AACH,GALD;;AAMA,QAAMC,SAAS,GAAE,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAClC;AACA,QAAIC,UAAU,GAAGL,WAAjB;AACAK,IAAAA,UAAU,CAAC,KAAD,CAAV,GAAoBD,QAApB;AACAH,IAAAA,cAAc,CAACI,UAAD,CAAd;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,cAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEX,EAA1B;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAA2C,QAAA,IAAI,EAAC,SAAhD;AAA0D,QAAA,QAAQ,EAAEQ;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,UAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEL,GAA1B;AAA+B,QAAA,EAAE,EAAC,KAAlC;AAAwC,QAAA,IAAI,EAAC,KAA7C;AAAmD,QAAA,QAAQ,EAAES;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/BD;;IAAMP,a;UAEoBR,U,EACEA,U,EACgBA,U;;;MAJtCQ,a;AAiCN,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { ShareableProbeParams } from './Buttons.js';\n\nexport const ShareableWTState = () => {\n    const [WT, setWT] = useState('');\n    return {\n        WT,\n        setWT\n    };\n};\n\nexport const ShareableSNPState = () => {\n    const [SNP, setSNP] = useState('');\n    return {\n        SNP,\n        setSNP\n    };\n};\n\nconst SequenceEntry = () => {\n\n    const { WT, setWT } = useBetween(ShareableWTState);\n    const { SNP, setSNP } = useBetween(ShareableSNPState);\n    const { probeParams, setProbeParams } = useBetween(ShareableProbeParams);\n\n    const handleWT= (event, newValue) => {\n        //setWT(newValue);\n        var copyParams = probeParams;\n        copyParams['WT'] = newValue;\n        setProbeParams(copyParams);\n    };\n    const handleSNP= (event, newValue) => {\n        //setSNP(newValue);\n        var copyParams = probeParams;\n        copyParams['SNP'] = newValue;\n        setProbeParams(copyParams);\n    };\n\n    return (\n        <div className=\"sequenceentry\">\n            <div class=\"seq-form\" id=\"non-mut-form\">\n                <label for=\"non-mut\">WT Sequence</label>\n                <input type=\"text\" value={WT} id=\"non-mut\" name=\"non-mut\" onChange={handleWT} />\n            </div>\n            <div class=\"seq-form\" id=\"mut-form\">\n                <label for=\"mut\">Mutated Sequence</label>\n                <input type=\"text\" value={SNP} id=\"mut\" name=\"mut\" onChange={handleSNP} />\n            </div>\n        </div>\n    );\n};\n\nexport default SequenceEntry;"]},"metadata":{},"sourceType":"module"}