{"ast":null,"code":"import _slicedToArray from\"/home/leland/MLPractice/snp-lamp-design/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useEffect}from'react';//var fetch = require('node-fetch');\nimport NodeFetch from'node-fetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SequenceEntry=function SequenceEntry(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),WT=_useState2[0],setWT=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),SNP=_useState4[0],setSNP=_useState4[1];var sendUpdate=function sendUpdate(data){//var data = {'WT': WT, 'SNP': SNP};\nNodeFetch('http://127.0.0.1:5000/send_input',{headers:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(data)}).then(function(response){return response.text();});};/*\n    const handleWT = (event, newValue) => {\n        setWT(newValue);\n        sendUpdate();\n    };\n\n    const handleSNP = (event, newValue) => {\n        setSNP(newValue);\n        sendUpdate();\n    };*/ /*useEffect(() => {\n        const interval2 = setInterval(() => {\n            sendUpdate();\n        }, 1000);\n        return () => {\n          clearInterval(interval2);\n        };\n      }, []);*/return/*#__PURE__*/_jsxs(\"div\",{className:\"sequenceentry\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"seq-form\",id:\"non-mut-form\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"non-mut\",children:\"WT Sequence\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:WT,id:\"non-mut\",name:\"non-mut\",onChange:function onChange(i){return sendUpdate({'WT':i.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"seq-form\",id:\"mut-form\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"mut\",children:\"Mutated Sequence\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:SNP,id:\"mut\",name:\"mut\",onChange:function onChange(j){return sendUpdate({'SNP':j.target.value});}})]})]});};export default SequenceEntry;","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design/react-app/src/SequenceEntry.js"],"names":["useState","useEffect","NodeFetch","SequenceEntry","WT","setWT","SNP","setSNP","sendUpdate","data","headers","method","body","JSON","stringify","then","response","text","i","target","value","j"],"mappings":"oIAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,cAAoBH,QAAQ,EAA5B,wCAAOI,EAAP,eAAWC,KAAX,eACA,eAAsBL,QAAQ,EAA9B,yCAAOM,GAAP,eAAYC,MAAZ,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CACzB;AAEAP,SAAS,CAAC,kCAAD,CACf,CAACQ,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAAV,CACAC,MAAM,CAAE,MADR,CAEAC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFN,CADe,CAAT,CAIGM,IAJH,CAIQ,SAAUC,QAAV,CAAoB,CACxB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAND,EAOH,CAVD,CAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAzB4B,CA2BxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,eAEI,mBACI,aAAK,SAAS,CAAC,eAAf,wBACI,aAAK,KAAK,CAAC,UAAX,CAAsB,EAAE,CAAC,cAAzB,wBACI,cAAO,GAAG,CAAC,SAAX,yBADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEb,EAA1B,CAA8B,EAAE,CAAC,SAAjC,CAA2C,IAAI,CAAC,SAAhD,CAA0D,QAAQ,CAAE,kBAAAc,CAAC,QAAIV,CAAAA,UAAU,CAAC,CAAC,KAAMU,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAD,CAAd,EAArE,EAFJ,GADJ,cAKI,aAAK,KAAK,CAAC,UAAX,CAAsB,EAAE,CAAC,UAAzB,wBACI,cAAO,GAAG,CAAC,KAAX,8BADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEd,GAA1B,CAA+B,EAAE,CAAC,KAAlC,CAAwC,IAAI,CAAC,KAA7C,CAAmD,QAAQ,CAAE,kBAAAe,CAAC,QAAIb,CAAAA,UAAU,CAAC,CAAC,MAAOa,CAAC,CAACF,MAAF,CAASC,KAAjB,CAAD,CAAd,EAA9D,EAFJ,GALJ,GADJ,CAYH,CAhDD,CAkDA,cAAejB,CAAAA,aAAf","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\n//var fetch = require('node-fetch');\nimport NodeFetch from 'node-fetch';\n\nconst SequenceEntry = () => {\n    const [WT, setWT] = useState();\n    const [SNP, setSNP] = useState();\n\n    const sendUpdate = (data) => {\n        //var data = {'WT': WT, 'SNP': SNP};\n\n        NodeFetch('http://127.0.0.1:5000/send_input', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data)\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    /*\n    const handleWT = (event, newValue) => {\n        setWT(newValue);\n        sendUpdate();\n    };\n\n    const handleSNP = (event, newValue) => {\n        setSNP(newValue);\n        sendUpdate();\n    };*/\n\n    /*useEffect(() => {\n        const interval2 = setInterval(() => {\n            sendUpdate();\n        }, 1000);\n        return () => {\n          clearInterval(interval2);\n        };\n      }, []);*/\n\n    return (\n        <div className=\"sequenceentry\">\n            <div class=\"seq-form\" id=\"non-mut-form\">\n                <label for=\"non-mut\">WT Sequence</label>\n                <input type=\"text\" value={WT} id=\"non-mut\" name=\"non-mut\" onChange={i => sendUpdate({'WT': i.target.value})} />\n            </div>\n            <div class=\"seq-form\" id=\"mut-form\">\n                <label for=\"mut\">Mutated Sequence</label>\n                <input type=\"text\" value={SNP} id=\"mut\" name=\"mut\" onChange={j => sendUpdate({'SNP': j.target.value})} />\n            </div>\n        </div>\n    );\n};\n\nexport default SequenceEntry;"]},"metadata":{},"sourceType":"module"}