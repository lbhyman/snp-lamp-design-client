{"ast":null,"code":"import _slicedToArray from\"/home/leland/MLPractice/snp-lamp-design/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';//var fetch = require('node-fetch');\nimport NodeFetch from'node-fetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConditionEntry=function ConditionEntry(){var _useState=useState('21'),_useState2=_slicedToArray(_useState,2),temperature=_useState2[0],setTemperature=_useState2[1];var _useState3=useState('65'),_useState4=_slicedToArray(_useState3,2),sodium=_useState4[0],setSodium=_useState4[1];var _useState5=useState('8'),_useState6=_slicedToArray(_useState5,2),magnesium=_useState6[0],setMagnesium=_useState6[1];var sendUpdate=function sendUpdate(){var data={'temperature':parseFloat(temperature),'sodium':parseFloat(sodium)/1000.0,'magnesium':parseFloat(magnesium)/1000.0};NodeFetch('http://127.0.0.1:5000/send_input',{headers:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(data)}).then(function(response){return response.text();});};var handleTemperature=function handleTemperature(event,newValue){setTemperature(newValue);sendUpdate();};var handleSodium=function handleSodium(event,newValue){setSodium(newValue);sendUpdate();};var handleMagnesium=function handleMagnesium(event,newValue){setMagnesium(newValue);sendUpdate();};return/*#__PURE__*/_jsxs(\"div\",{className:\"conditionentry\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"condition-form\",id:\"temperature-form\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"temperature\",children:\"Temperature (C)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"temperature\",name:\"temperature\",onChange:handleTemperature})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"condition-form\",id:\"sodium-form\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"sodium\",children:\"[Sodium] (mM)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"sodium\",name:\"sodium\",onChange:handleSodium})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"condition-form\",id:\"magnesium-form\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"magnesium\",children:\"[Magnesium] (mM)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"magnesium\",name:\"magnesium\",onChange:handleMagnesium})]})]});};export default ConditionEntry;","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design/react-app/src/ConditionEntry.js"],"names":["useState","NodeFetch","ConditionEntry","temperature","setTemperature","sodium","setSodium","magnesium","setMagnesium","sendUpdate","data","parseFloat","headers","method","body","JSON","stringify","then","response","text","handleTemperature","event","newValue","handleSodium","handleMagnesium"],"mappings":"oIAAA,OAASA,QAAT,KAAyB,OAAzB,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAEzB,cAAsCF,QAAQ,CAAC,IAAD,CAA9C,wCAAOG,WAAP,eAAoBC,cAApB,eACA,eAA4BJ,QAAQ,CAAC,IAAD,CAApC,yCAAOK,MAAP,eAAeC,SAAf,eACA,eAAkCN,QAAQ,CAAC,GAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAIC,CAAAA,IAAI,CAAG,CAAC,cAAeC,UAAU,CAACR,WAAD,CAA1B,CAAyC,SAAUQ,UAAU,CAACN,MAAD,CAAV,CAAqB,MAAxE,CACX,YAAaM,UAAU,CAACJ,SAAD,CAAV,CAAwB,MAD1B,CAAX,CAGAN,SAAS,CAAC,kCAAD,CACf,CAACW,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAAV,CACAC,MAAM,CAAE,MADR,CAEAC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFN,CADe,CAAT,CAIGO,IAJH,CAIQ,SAAUC,QAAV,CAAoB,CACxB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAND,EAOH,CAXD,CAaA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3ClB,cAAc,CAACkB,QAAD,CAAd,CACAb,UAAU,GACb,CAHD,CAIA,GAAMc,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAQC,QAAR,CAAqB,CACtChB,SAAS,CAACgB,QAAD,CAAT,CACAb,UAAU,GACb,CAHD,CAIA,GAAMe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACH,KAAD,CAAQC,QAAR,CAAqB,CACzCd,YAAY,CAACc,QAAD,CAAZ,CACAb,UAAU,GACb,CAHD,CAKA,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,aAAK,KAAK,CAAC,gBAAX,CAA4B,EAAE,CAAC,kBAA/B,wBACI,cAAO,GAAG,CAAC,aAAX,6BADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,aAAtB,CAAoC,IAAI,CAAC,aAAzC,CAAuD,QAAQ,CAAEW,iBAAjE,EAFJ,GADJ,cAKI,aAAK,KAAK,CAAC,gBAAX,CAA4B,EAAE,CAAC,aAA/B,wBACI,cAAO,GAAG,CAAC,QAAX,2BADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,IAAI,CAAC,QAApC,CAA6C,QAAQ,CAAEG,YAAvD,EAFJ,GALJ,cASI,aAAK,KAAK,CAAC,gBAAX,CAA4B,EAAE,CAAC,gBAA/B,wBACI,cAAO,GAAG,CAAC,WAAX,8BADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,IAAI,CAAC,WAAvC,CAAmD,QAAQ,CAAEC,eAA7D,EAFJ,GATJ,GADJ,CAgBH,CAhDD,CAkDA,cAAetB,CAAAA,cAAf","sourcesContent":["import { useState } from 'react';\n//var fetch = require('node-fetch');\nimport NodeFetch from 'node-fetch';\n\nconst ConditionEntry = () => {\n\n    const [temperature, setTemperature] = useState('21');\n    const [sodium, setSodium] = useState('65');\n    const [magnesium, setMagnesium] = useState('8');\n\n    const sendUpdate = () => {\n        var data = {'temperature': parseFloat(temperature), 'sodium': parseFloat(sodium) / 1000.0, \n        'magnesium': parseFloat(magnesium) / 1000.0};\n\n        NodeFetch('http://127.0.0.1:5000/send_input', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data)\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    const handleTemperature = (event, newValue) => {\n        setTemperature(newValue);\n        sendUpdate();\n    };\n    const handleSodium = (event, newValue) => {\n        setSodium(newValue);\n        sendUpdate();\n    };\n    const handleMagnesium = (event, newValue) => {\n        setMagnesium(newValue);\n        sendUpdate();\n    };\n\n    return (\n        <div className=\"conditionentry\">\n            <div class=\"condition-form\" id=\"temperature-form\">\n                <label for=\"temperature\">Temperature (C)</label>\n                <input type=\"text\" id=\"temperature\" name=\"temperature\" onChange={handleTemperature} />\n            </div>\n            <div class=\"condition-form\" id=\"sodium-form\">\n                <label for=\"sodium\">[Sodium] (mM)</label>\n                <input type=\"text\" id=\"sodium\" name=\"sodium\" onChange={handleSodium} />\n            </div>\n            <div class=\"condition-form\" id=\"magnesium-form\">\n                <label for=\"magnesium\">[Magnesium] (mM)</label>\n                <input type=\"text\" id=\"magnesium\" name=\"magnesium\" onChange={handleMagnesium} />\n            </div>\n        </div>\n    );\n};\n\nexport default ConditionEntry;"]},"metadata":{},"sourceType":"module"}