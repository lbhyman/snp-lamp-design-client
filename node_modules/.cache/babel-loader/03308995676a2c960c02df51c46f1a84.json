{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/ConditionEntry.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from 'react';\nimport { useBetween } from 'use-between';\nimport { ShareableProbeParams } from './Buttons.js';\nimport PopSlider from './PopSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConditionEntry = () => {\n  _s();\n\n  const {\n    probeParams,\n    setProbeParams\n  } = useBetween(ShareableProbeParams);\n  const [sodium, setSodium] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [magnesium, setMagnesium] = useState('');\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const handleTemperature = newValue => {\n    forceUpdate();\n    var copyParams = probeParams;\n    copyParams.params.temperature = newValue;\n    setProbeParams(copyParams);\n    setTemperature(newValue);\n  };\n\n  const handleSodium = newValue => {\n    forceUpdate();\n    var copyParams = probeParams;\n    copyParams.params.sodium = newValue;\n    setProbeParams(copyParams);\n    setSodium(newValue);\n  };\n\n  const handleMagnesium = newValue => {\n    forceUpdate();\n    var copyParams = probeParams;\n    copyParams.params.magnesium = newValue;\n    setProbeParams(copyParams);\n    setMagnesium(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conditionentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"condition-form\",\n      id: \"temperature-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"temperature\",\n        children: \"temperature (C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: temperature,\n        id: \"temperature\",\n        name: \"temperature\",\n        onChange: i => handleTemperature(i.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"condition-form\",\n      id: \"sodium-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"sodium\",\n        children: \"sodium (mM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sodium,\n        id: \"sodium\",\n        name: \"sodium\",\n        onChange: j => handleSodium(j.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"condition-form\",\n      id: \"magnesium-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"magnesium\",\n        children: \"magnesium (mM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: magnesium,\n        id: \"magnesium\",\n        name: \"magnesium\",\n        onChange: k => handleMagnesium(k.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopSlider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConditionEntry, \"38P9ir9913QH6lePeYpQS2WmUcc=\", false, function () {\n  return [useBetween];\n});\n\n_c = ConditionEntry;\nexport default ConditionEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionEntry\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/ConditionEntry.js"],"names":["useState","useReducer","useBetween","ShareableProbeParams","PopSlider","ConditionEntry","probeParams","setProbeParams","sodium","setSodium","temperature","setTemperature","magnesium","setMagnesium","forceUpdate","x","handleTemperature","newValue","copyParams","params","handleSodium","handleMagnesium","i","target","value","j","k"],"mappings":"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","sourcesContent":["import { useState, useReducer } from 'react';\nimport { useBetween } from 'use-between';\nimport { ShareableProbeParams } from './Buttons.js';\nimport PopSlider from './PopSlider';\n\nconst ConditionEntry = () => {\n\n    const { probeParams, setProbeParams } = useBetween(ShareableProbeParams);\n    const [sodium, setSodium] = useState('');\n    const [temperature, setTemperature] = useState('');\n    const [magnesium, setMagnesium] = useState('');\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n    const handleTemperature = (newValue) => {\n        forceUpdate();\n        var copyParams = probeParams;\n        copyParams.params.temperature = newValue;\n        setProbeParams(copyParams);\n        setTemperature(newValue);\n    };\n    const handleSodium = (newValue) => {\n        forceUpdate();\n        var copyParams = probeParams;\n        copyParams.params.sodium = newValue;\n        setProbeParams(copyParams);\n        setSodium(newValue);\n    };\n    const handleMagnesium = (newValue) => {\n        forceUpdate();\n        var copyParams = probeParams;\n        copyParams.params.magnesium = newValue;\n        setProbeParams(copyParams);\n        setMagnesium(newValue);\n    };\n\n    return (\n        <div className=\"conditionentry\">\n            <div class=\"condition-form\" id=\"temperature-form\">\n                <label for=\"temperature\">temperature (C)</label>\n                <input type=\"text\" value={temperature} id=\"temperature\" name=\"temperature\" onChange={i => handleTemperature(i.target.value)} />\n            </div>\n            <div class=\"condition-form\" id=\"sodium-form\">\n                <label for=\"sodium\">sodium (mM)</label>\n                <input type=\"text\" value={sodium} id=\"sodium\" name=\"sodium\" onChange={j => handleSodium(j.target.value)} />\n            </div>\n            <div class=\"condition-form\" id=\"magnesium-form\">\n                <label for=\"magnesium\">magnesium (mM)</label>\n                <input type=\"text\" value={magnesium} id=\"magnesium\" name=\"magnesium\" onChange={k => handleMagnesium(k.target.value)} />\n            </div>\n            <PopSlider />\n        </div>\n    );\n};\n\nexport default ConditionEntry;"]},"metadata":{},"sourceType":"module"}