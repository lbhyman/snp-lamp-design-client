{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/ConditionEntry.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShareableTemperatureState = () => {\n  _s();\n\n  const [temperature, setTemperature] = useState('21');\n  return {\n    temperature,\n    setTemperature\n  };\n};\n\n_s(ShareableTemperatureState, \"6Laygrg8DcSKOT47xe65RWSz7n4=\");\n\n_c = ShareableTemperatureState;\nexport const ShareableSodiumState = () => {\n  _s2();\n\n  const [sodium, setSodium] = useState('65');\n  return {\n    sodium,\n    setSodium\n  };\n};\n\n_s2(ShareableSodiumState, \"xfNvomBAY1s0wOKIsGkCioKa0us=\");\n\n_c2 = ShareableSodiumState;\nexport const ShareableMagnesiumState = () => {\n  _s3();\n\n  const [magnesium, setMagnesium] = useState('8');\n  return {\n    magnesium,\n    setMagnesium\n  };\n};\n\n_s3(ShareableMagnesiumState, \"x2slX/yHIIUbwQkOdwuoNGAEakA=\");\n\n_c3 = ShareableMagnesiumState;\n\nconst ConditionEntry = () => {\n  _s4();\n\n  const {\n    temperature,\n    setTemperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium,\n    setSodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium,\n    setMagnesium\n  } = useBetween(ShareableMagnesiumState);\n\n  const handleTemperature = (event, newValue) => {\n    setTemperature(newValue);\n  };\n\n  const handleSodium = (event, newValue) => {\n    setSodium(newValue);\n  };\n\n  const handleMagnesium = (event, newValue) => {\n    setMagnesium(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conditionentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"condition-form\",\n      id: \"temperature-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"temperature\",\n        children: \"Temperature (C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"temperature\",\n        name: \"temperature\",\n        onChange: handleTemperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"condition-form\",\n      id: \"sodium-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"sodium\",\n        children: \"[Sodium] (mM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"sodium\",\n        name: \"sodium\",\n        onChange: handleSodium\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"condition-form\",\n      id: \"magnesium-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"magnesium\",\n        children: \"[Magnesium] (mM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"magnesium\",\n        name: \"magnesium\",\n        onChange: handleMagnesium\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s4(ConditionEntry, \"Qp9EhMbT+g26/QdnXH7+BPvs810=\", false, function () {\n  return [useBetween, useBetween, useBetween];\n});\n\n_c4 = ConditionEntry;\nexport default ConditionEntry;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShareableTemperatureState\");\n$RefreshReg$(_c2, \"ShareableSodiumState\");\n$RefreshReg$(_c3, \"ShareableMagnesiumState\");\n$RefreshReg$(_c4, \"ConditionEntry\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/ConditionEntry.js"],"names":["React","useState","useBetween","ShareableTemperatureState","temperature","setTemperature","ShareableSodiumState","sodium","setSodium","ShareableMagnesiumState","magnesium","setMagnesium","ConditionEntry","handleTemperature","event","newValue","handleSodium","handleMagnesium"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\n\nexport const ShareableTemperatureState = () => {\n    const [temperature, setTemperature] = useState('21');\n    return {\n        temperature,\n        setTemperature\n    }\n}\n\nexport const ShareableSodiumState = () => {\n    const [sodium, setSodium] = useState('65');\n    return {\n        sodium,\n        setSodium\n    }\n}\n\nexport const ShareableMagnesiumState = () => {\n    const [magnesium, setMagnesium] = useState('8');\n    return {\n        magnesium,\n        setMagnesium\n    }\n}\n\nconst ConditionEntry = () => {\n\n    const { temperature, setTemperature } = useBetween(ShareableTemperatureState);\n    const { sodium, setSodium } = useBetween(ShareableSodiumState);\n    const { magnesium, setMagnesium } = useBetween(ShareableMagnesiumState);\n\n    const handleTemperature = (event, newValue) => {\n        setTemperature(newValue);\n    };\n    const handleSodium = (event, newValue) => {\n        setSodium(newValue);\n    };\n    const handleMagnesium = (event, newValue) => {\n        setMagnesium(newValue);\n    };\n\n    return (\n        <div className=\"conditionentry\">\n            <div class=\"condition-form\" id=\"temperature-form\">\n                <label for=\"temperature\">Temperature (C)</label>\n                <input type=\"text\" id=\"temperature\" name=\"temperature\" onChange={handleTemperature} />\n            </div>\n            <div class=\"condition-form\" id=\"sodium-form\">\n                <label for=\"sodium\">[Sodium] (mM)</label>\n                <input type=\"text\" id=\"sodium\" name=\"sodium\" onChange={handleSodium} />\n            </div>\n            <div class=\"condition-form\" id=\"magnesium-form\">\n                <label for=\"magnesium\">[Magnesium] (mM)</label>\n                <input type=\"text\" id=\"magnesium\" name=\"magnesium\" onChange={handleMagnesium} />\n            </div>\n        </div>\n    );\n};\n\nexport default ConditionEntry;"]},"metadata":{},"sourceType":"module"}