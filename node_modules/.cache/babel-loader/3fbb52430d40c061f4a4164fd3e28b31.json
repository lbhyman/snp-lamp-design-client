{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShareableProbeParams = () => {\n  _s();\n\n  const [probeParams, setProbeParams] = useState(null);\n  return {\n    probeParams,\n    setProbeParams\n  };\n};\n\n_s(ShareableProbeParams, \"qrHi543c2UwUNtfpTefecHSPPF4=\");\n\n_c = ShareableProbeParams;\nexport const ShareableStartSignal = () => {\n  _s2();\n\n  const [startSignal, setStartSignal] = useState(false);\n  return {\n    startSignal,\n    setStartSignal\n  };\n};\n\n_s2(ShareableStartSignal, \"9McV1jq+SEPDqEGm9O9z5Rr2Gog=\");\n\n_c2 = ShareableStartSignal;\nexport const ShareableStopSignal = () => {\n  _s3();\n\n  const [stopSignal, setStopSignal] = useState(false);\n  return {\n    stopSignal,\n    setStopSignal\n  };\n};\n\n_s3(ShareableStopSignal, \"NCPb8tFZRcaUHDmB9fvf3VZWvBU=\");\n\n_c3 = ShareableStopSignal;\n\nconst Buttons = () => {\n  _s5();\n\n  var _s4 = $RefreshSig$();\n\n  const {\n    running,\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    temperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium\n  } = useBetween(ShareableMagnesiumState);\n  const {\n    WT_seq\n  } = useBetween(ShareableWTState);\n  const {\n    SNP_seq\n  } = useBetween(ShareableSNPState);\n  const {\n    probeParams,\n    setProbeParams\n  } = useBetween(ShareableProbeParams);\n  const {\n    startSignal,\n    setStartSignal\n  } = useBetween(ShareableStartSignal);\n  const {\n    stopSignal,\n    setStopSignal\n  } = useBetween(ShareableStopSignal);\n\n  const HandleStart = () => {\n    var params = {\n      WT: WT_seq,\n      SNP: SNP_seq,\n      minlength: 6,\n      mut_rate: 0.5,\n      concentrations: {\n        non_mut_target: 1e-7,\n        mut_target: 1e-7,\n        probeF: 1e-7,\n        probeQ: 1e-7,\n        sink: 1e-7,\n        sinkC: 1e-7\n      },\n      params: {\n        temperature: parseFloat(temperature),\n        sodium: parseFloat(sodium) / 1000.0,\n        magnesium: parseFloat(magnesium) / 1000.0\n      },\n      beta: [0, 0, 0, 0],\n      truncations: []\n    };\n    setProbeParams(params);\n    setStartSignal(true);\n  };\n\n  const HandleStop = () => {\n    _s4();\n\n    setStopSignal(true);\n    const {\n      optimizer\n    } = useBetween(ShareableOptimizer);\n    const {\n      setRunning\n    } = useBetween(ShareableRunningState);\n    setRunning(false);\n    optimizer.reset();\n    return null;\n  };\n\n  _s4(HandleStop, \"KIt1TwK/dMC50eoknZfQE394cvw=\", false, function () {\n    return [useBetween, useBetween];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"startstopbuttons\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"startbutton\",\n      variant: \"contained\",\n      disabled: running,\n      color: \"primary\",\n      onClick: HandleStart,\n      children: \"Optimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stopbutton\",\n      variant: \"contained\",\n      disabled: !running,\n      color: \"default\",\n      onClick: HandleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandleStart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandleStop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Optimizer, {\n      probe_params: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s5(Buttons, \"7+1XZ282TEW0bJFUk3be96b8iiA=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c4 = Buttons;\nexport default Buttons;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShareableProbeParams\");\n$RefreshReg$(_c2, \"ShareableStartSignal\");\n$RefreshReg$(_c3, \"ShareableStopSignal\");\n$RefreshReg$(_c4, \"Buttons\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js"],"names":["ShareableRunningState","ShareableTemperatureState","ShareableSodiumState","ShareableMagnesiumState","ShareableWTState","ShareableSNPState","Optimizer","Button","useState","useBetween","ShareableProbeParams","probeParams","setProbeParams","ShareableStartSignal","startSignal","setStartSignal","ShareableStopSignal","stopSignal","setStopSignal","Buttons","running","setRunning","temperature","sodium","magnesium","WT_seq","SNP_seq","HandleStart","params","WT","SNP","minlength","mut_rate","concentrations","non_mut_target","mut_target","probeF","probeQ","sink","sinkC","parseFloat","beta","truncations","HandleStop","optimizer","ShareableOptimizer","reset"],"mappings":"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","sourcesContent":["import { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\n\nexport const ShareableProbeParams = () => {\n    const [probeParams, setProbeParams] = useState(null);\n    return {\n        probeParams,\n        setProbeParams\n    };\n};\n\nexport const ShareableStartSignal = () => {\n    const [startSignal, setStartSignal] = useState(false);\n    return {\n        startSignal,\n        setStartSignal\n    };\n};\n\nexport const ShareableStopSignal = () => {\n    const [stopSignal, setStopSignal] = useState(false);\n    return {\n        stopSignal,\n        setStopSignal\n    };\n};\n\n\n\nconst Buttons = () => {\n\n    const { running, setRunning } = useBetween(ShareableRunningState);\n    const { temperature } = useBetween(ShareableTemperatureState);\n    const { sodium } = useBetween(ShareableSodiumState);\n    const { magnesium } = useBetween(ShareableMagnesiumState);\n    const { WT_seq } = useBetween(ShareableWTState);\n    const { SNP_seq } = useBetween(ShareableSNPState);\n    const { probeParams, setProbeParams } = useBetween(ShareableProbeParams);\n    const { startSignal, setStartSignal } = useBetween(ShareableStartSignal);\n    const { stopSignal, setStopSignal } = useBetween(ShareableStopSignal);\n\n    const HandleStart = () => {\n        var params = {\n            WT:WT_seq,\n            SNP:SNP_seq,\n            minlength:6,\n            mut_rate:0.5,\n            concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n            params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n            beta:[0,0,0,0],\n            truncations:[]\n        };\n        setProbeParams(params);\n        setStartSignal(true);\n    };\n\n    const HandleStop = () => {\n        setStopSignal(true);\n        const { optimizer } = useBetween(ShareableOptimizer);\n        const { setRunning } = useBetween(ShareableRunningState);\n        setRunning(false);\n        optimizer.reset();\n        return null;\n    };\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={HandleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={HandleStop}>\n                Stop\n            </Button>\n            <HandleStart />\n            <HandleStop />\n            <Optimizer probe_params />\n        </div>\n    )\n};\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}