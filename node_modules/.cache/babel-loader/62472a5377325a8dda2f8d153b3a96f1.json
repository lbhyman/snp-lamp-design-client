{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design/react-app/src/PopSlider.js\",\n    _s = $RefreshSig$();\n\nimport Slider from '@material-ui/core/Slider';\nimport { useState } from 'react';\nimport NodeFetch from 'node-fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction valuetext(value) {\n  return `${2 ** value}`;\n}\n\nconst PopSlider = () => {\n  _s();\n\n  const sliderMin = 16;\n  const sliderMax = 4096;\n  var sliderStart = 128;\n  var sliderValue = sliderStart;\n  const [value, setValue] = useState(Math.log2(sliderValue));\n\n  const sendUpdate = () => {\n    var data = {\n      'pop_size': value\n    };\n    NodeFetch('http://127.0.0.1:5000/send_input', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      return response.text();\n    });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    sendUpdate();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popslider\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"population slider\",\n      className: \"sliderlabel\",\n      children: [\"Starting Population: \", 2 ** value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: Math.log2(sliderValue),\n      getAriaValueText: valuetext,\n      \"aria-labelledby\": \"discrete-slider\",\n      valueLabelDisplay: \"auto\",\n      onChange: handleChange,\n      step: 1,\n      marks: true,\n      scale: x => 2 ** x,\n      min: Math.log2(sliderMin),\n      max: Math.log2(sliderMax)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PopSlider, \"6/niBhayjiykytwCsAugmGzqMP0=\");\n\n_c = PopSlider;\nexport default PopSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopSlider\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design/react-app/src/PopSlider.js"],"names":["Slider","useState","NodeFetch","valuetext","value","PopSlider","sliderMin","sliderMax","sliderStart","sliderValue","setValue","Math","log2","sendUpdate","data","headers","method","body","JSON","stringify","then","response","text","handleChange","event","newValue","x"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,SAAQ,GAAE,KAAKA,KAAM,EAArB;AACD;;AAEH,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,IAAlB;AACA,MAAIC,WAAW,GAAG,GAAlB;AACA,MAAIC,WAAW,GAAGD,WAAlB;AACA,QAAM,CAACJ,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAACU,IAAI,CAACC,IAAL,CAAUH,WAAV,CAAD,CAAlC;;AAEA,QAAMI,UAAU,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAG;AAAC,kBAAYV;AAAb,KAAX;AAEAF,IAAAA,SAAS,CAAC,kCAAD,EACf;AAACa,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAAV;AACAC,MAAAA,MAAM,EAAE,MADR;AAEAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFN,KADe,CAAT,CAIGM,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAND;AAOH,GAVD;;AAYA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCf,IAAAA,QAAQ,CAACe,QAAD,CAAR;AACAZ,IAAAA,UAAU;AACb,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAO,MAAA,GAAG,EAAC,mBAAX;AAA+B,MAAA,SAAS,EAAC,aAAzC;AAAA,0CAA6E,KAAKT,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACI,MAAA,YAAY,EAAEO,IAAI,CAACC,IAAL,CAAUH,WAAV,CADlB;AAEI,MAAA,gBAAgB,EAAEN,SAFtB;AAGI,yBAAgB,iBAHpB;AAII,MAAA,iBAAiB,EAAC,MAJtB;AAKI,MAAA,QAAQ,EAAEoB,YALd;AAMI,MAAA,IAAI,EAAE,CANV;AAOI,MAAA,KAAK,MAPT;AAQI,MAAA,KAAK,EAAGG,CAAD,IAAO,KAAKA,CARvB;AASI,MAAA,GAAG,EAAEf,IAAI,CAACC,IAAL,CAAUN,SAAV,CATT;AAUI,MAAA,GAAG,EAAEK,IAAI,CAACC,IAAL,CAAUL,SAAV;AAVT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAzCD;;GAAMF,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import Slider from '@material-ui/core/Slider';\nimport { useState } from 'react';\nimport NodeFetch from 'node-fetch';\n\nfunction valuetext(value) {\n    return `${2 ** value}`;\n  }\n\nconst PopSlider = () => {\n    const sliderMin = 16;\n    const sliderMax = 4096;\n    var sliderStart = 128;\n    var sliderValue = sliderStart;\n    const [value, setValue] = useState(Math.log2(sliderValue));\n\n    const sendUpdate = () => {\n        var data = {'pop_size': value};\n\n        NodeFetch('http://127.0.0.1:5000/send_input', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data)\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        sendUpdate();\n    };\n\n    return (\n        <div className=\"popslider\">\n            <label for=\"population slider\" className=\"sliderlabel\">Starting Population: {2 ** value}</label>\n            <Slider\n                defaultValue={Math.log2(sliderValue)}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChange={handleChange}\n                step={1}\n                marks\n                scale={(x) => 2 ** x}\n                min={Math.log2(sliderMin)}\n                max={Math.log2(sliderMax)}\n            />\n        </div>\n    );\n};\n\nexport default PopSlider;"]},"metadata":{},"sourceType":"module"}