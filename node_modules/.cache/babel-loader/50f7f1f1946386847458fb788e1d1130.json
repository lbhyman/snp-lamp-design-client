{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js\",\n    _s = $RefreshSig$();\n\nimport { useBetween } from 'use-between';\nimport { useState, useReducer } from 'react';\nimport { ShareableProbeParams } from './Buttons.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SequenceEntry = () => {\n  _s();\n\n  const {\n    probeParams,\n    setProbeParams\n  } = useBetween(ShareableProbeParams);\n  const [WT, setWT] = useState('');\n  const [SNP, setSNP] = useState('');\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const handleWT = newValue => {\n    forceUpdate();\n    var currParams = probeParams;\n    currParams.WT = newValue.toUpperCase();\n    setProbeParams(currParams);\n    setWT(newValue);\n  };\n\n  const handleSNP = newValue => {\n    forceUpdate();\n    var currParams = probeParams;\n    currParams.SNP = newValue.toUpperCase();\n    setProbeParams(currParams);\n    setSNP(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sequenceentry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"non-mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"non-mut\",\n        children: \"wildtype sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: WT,\n        id: \"non-mut\",\n        name: \"non-mut\",\n        onChange: i => handleWT(i.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"seq-form\",\n      id: \"mut-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"mut\",\n        children: \"mutated sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: SNP,\n        id: \"mut\",\n        name: \"mut\",\n        onChange: j => handleSNP(j.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SequenceEntry, \"j7UOsgxdY/opc85jy+ns8RfEiuY=\", false, function () {\n  return [useBetween];\n});\n\n_c = SequenceEntry;\nexport default SequenceEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"SequenceEntry\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js"],"names":["useBetween","useState","useReducer","ShareableProbeParams","SequenceEntry","probeParams","setProbeParams","WT","setWT","SNP","setSNP","forceUpdate","x","handleWT","newValue","currParams","toUpperCase","handleSNP","i","target","value","j"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,oBAAT,QAAqC,cAArC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCN,UAAU,CAACG,oBAAD,CAAlD;AACA,QAAM,CAACI,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,GAAGU,WAAH,IAAkBT,UAAU,CAACU,CAAC,IAAIA,CAAC,GAAG,CAAV,EAAa,CAAb,CAAlC;;AAEA,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BH,IAAAA,WAAW;AACX,QAAII,UAAU,GAAGV,WAAjB;AACAU,IAAAA,UAAU,CAACR,EAAX,GAAgBO,QAAQ,CAACE,WAAT,EAAhB;AACAV,IAAAA,cAAc,CAACS,UAAD,CAAd;AACAP,IAAAA,KAAK,CAACM,QAAD,CAAL;AACH,GAND;;AAOA,QAAMG,SAAS,GAAIH,QAAD,IAAc;AAC5BH,IAAAA,WAAW;AACX,QAAII,UAAU,GAAGV,WAAjB;AACAU,IAAAA,UAAU,CAACN,GAAX,GAAiBK,QAAQ,CAACE,WAAT,EAAjB;AACAV,IAAAA,cAAc,CAACS,UAAD,CAAd;AACAL,IAAAA,MAAM,CAACI,QAAD,CAAN;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,cAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEP,EAA1B;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAA2C,QAAA,IAAI,EAAC,SAAhD;AAA0D,QAAA,QAAQ,EAAEW,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,EAAE,EAAC,UAAzB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEX,GAA1B;AAA+B,QAAA,EAAE,EAAC,KAAlC;AAAwC,QAAA,IAAI,EAAC,KAA7C;AAAmD,QAAA,QAAQ,EAAEY,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACF,MAAF,CAASC,KAAV;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlCD;;GAAMhB,a;UAEsCJ,U;;;KAFtCI,a;AAoCN,eAAeA,aAAf","sourcesContent":["import { useBetween } from 'use-between';\nimport { useState, useReducer } from 'react';\nimport { ShareableProbeParams } from './Buttons.js';\n\nconst SequenceEntry = () => {\n\n    const { probeParams, setProbeParams } = useBetween(ShareableProbeParams);\n    const [WT, setWT] = useState('');\n    const [SNP, setSNP] = useState('');\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n    const handleWT = (newValue) => {\n        forceUpdate();\n        var currParams = probeParams;\n        currParams.WT = newValue.toUpperCase();\n        setProbeParams(currParams);\n        setWT(newValue);\n    };\n    const handleSNP = (newValue) => {\n        forceUpdate();\n        var currParams = probeParams;\n        currParams.SNP = newValue.toUpperCase();\n        setProbeParams(currParams);\n        setSNP(newValue);\n    };\n\n    return (\n        <div className=\"sequenceentry\">\n            <div class=\"seq-form\" id=\"non-mut-form\">\n                <label for=\"non-mut\">wildtype sequence</label>\n                <input type=\"text\" value={WT} id=\"non-mut\" name=\"non-mut\" onChange={i => handleWT(i.target.value)} />\n            </div>\n            <div class=\"seq-form\" id=\"mut-form\">\n                <label for=\"mut\">mutated sequence</label>\n                <input type=\"text\" value={SNP} id=\"mut\" name=\"mut\" onChange={j => handleSNP(j.target.value)} />\n            </div>\n        </div>\n    );\n};\n\nexport default SequenceEntry;"]},"metadata":{},"sourceType":"module"}