{"ast":null,"code":"import _slicedToArray from\"/home/leland/MLPractice/snp-lamp-design/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/leland/MLPractice/snp-lamp-design/react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import CircularProgress from'@material-ui/core/CircularProgress';import Box from'@material-ui/core/Box';import{useState}from'react';import{useEffect}from'react';//var fetch = require('node-fetch');\nimport NodeFetch from'node-fetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CircularProgressWithLabel(props){return/*#__PURE__*/_jsxs(Box,{position:\"relative\",display:\"inline-flex\",children:[/*#__PURE__*/_jsx(CircularProgress,_objectSpread({variant:\"determinate\"},props)),/*#__PURE__*/_jsx(Box,{top:0,left:130,bottom:0,right:0,position:\"absolute\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsxs(\"label\",{for:\"progress label\",className:\"proglabel\",children:[props.value,\"%\"]})})]});}// Kill all running intervals\n/*var killId = setTimeout(function () {\n    for (var i = killId; i > 0; i--) {\n        clearInterval(i);\n    }\n}, 3000);*/var Output=function Output(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),running=_useState2[0],setRunning=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),finished=_useState4[0],setFinished=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),progress=_useState6[0],updateProgress=_useState6[1];var _useState7=useState({finished:false}),_useState8=_slicedToArray(_useState7,2),output=_useState8[0],updateOutput=_useState8[1];var getProgress=function getProgress(){NodeFetch('http://127.0.0.1:5000/get_progress',{headers:{'Content-Type':'application/json'},method:'POST',body:''}).then(function(response){return response.json();}).then(function(json){updateProgress(parseInt(json.progress));setRunning(json.running);});};var getOutput=function getOutput(){NodeFetch('http://127.0.0.1:5000/get_output',{headers:{'Content-Type':'application/json'},method:'POST',body:''}).then(function(response){return response.json();}).then(function(json){updateOutput(json);setFinished(json.finished);});};useEffect(function(){var interval=setInterval(function(){getProgress();getOutput();},1000);return function(){clearInterval(interval);};},[]);/*var mainLoop = setInterval(function () {\n        getProgress();\n        getOutput();\n    }, 10000);*/ //getProgress();\n//getOutput();\nif(running){return/*#__PURE__*/_jsxs(\"div\",{className:\"progress\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Optimization in Progress...\"}),/*#__PURE__*/_jsx(CircularProgressWithLabel,{variant:\"determinate\",size:\"150px\",value:progress,className:\"progressbar\"})]});}else if(finished){getOutput();return/*#__PURE__*/_jsxs(\"div\",{className:\"outputsequences\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Output\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sequencelabels\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"ProbeF: \"}),/*#__PURE__*/_jsx(\"p\",{children:\"ProbeQ: \"}),/*#__PURE__*/_jsx(\"p\",{children:\"Sink: \"}),/*#__PURE__*/_jsx(\"p\",{children:\"Sink*: \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"outsequences\",children:[/*#__PURE__*/_jsx(\"p\",{children:output['probeF']}),/*#__PURE__*/_jsx(\"p\",{children:output['probeQ']}),/*#__PURE__*/_jsx(\"p\",{children:output['sink']}),/*#__PURE__*/_jsx(\"p\",{children:output['sinkC']})]})]});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"emptyoutput\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Output\"})});}};export default Output;","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design/react-app/src/Output.js"],"names":["CircularProgress","Box","useState","useEffect","NodeFetch","CircularProgressWithLabel","props","value","Output","running","setRunning","finished","setFinished","progress","updateProgress","output","updateOutput","getProgress","headers","method","body","then","response","json","parseInt","getOutput","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n//var fetch = require('node-fetch');\nimport NodeFetch from 'node-fetch';\nfunction CircularProgressWithLabel(props) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={130}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <label for='progress label' className='proglabel'>{props.value}%</label>\n            </Box>\n        </Box>\n    );\n}\nCircularProgressWithLabel.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\n// Kill all running intervals\n/*var killId = setTimeout(function () {\n    for (var i = killId; i > 0; i--) {\n        clearInterval(i);\n    }\n}, 3000);*/\n\n\n\n\nconst Output = () => {\n    const [running, setRunning] = useState(false);\n    const [finished, setFinished] = useState(false);\n    const [progress, updateProgress] = useState(0);\n    const [output, updateOutput] = useState({ finished: false });\n\n    const getProgress = () => {\n        NodeFetch('http://127.0.0.1:5000/get_progress',\n            {\n                headers: { 'Content-Type': 'application/json' },\n                method: 'POST',\n                body: ''\n            }).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                updateProgress(parseInt(json.progress));\n                setRunning(json.running);\n            })\n    }\n\n    const getOutput = () => {\n        NodeFetch('http://127.0.0.1:5000/get_output',\n            {\n                headers: { 'Content-Type': 'application/json' },\n                method: 'POST',\n                body: ''\n            }).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                updateOutput(json);\n                setFinished(json.finished);\n            })\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            getProgress();\n            getOutput();\n        }, 1000);\n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    /*var mainLoop = setInterval(function () {\n        getProgress();\n        getOutput();\n    }, 10000);*/\n\n    //getProgress();\n    //getOutput();\n\n    if (running) {\n        return (\n            <div className=\"progress\">\n                <h2>Optimization in Progress...</h2>\n                <CircularProgressWithLabel variant=\"determinate\" size='150px' value={progress} className=\"progressbar\" />\n            </div>\n        );\n    }\n    else if (finished) {\n        getOutput();\n        return (\n            <div className=\"outputsequences\">\n                <h2>Output</h2>\n                <div className=\"sequencelabels\">\n                    <p>ProbeF: </p>\n                    <p>ProbeQ: </p>\n                    <p>Sink: </p>\n                    <p>Sink*: </p>\n                </div>\n                <div className=\"outsequences\">\n                    <p>{output['probeF']}</p>\n                    <p>{output['probeQ']}</p>\n                    <p>{output['sink']}</p>\n                    <p>{output['sinkC']}</p>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"emptyoutput\">\n                <h2>Output</h2>\n            </div>\n        );\n    }\n\n};\n\nexport default Output;"]},"metadata":{},"sourceType":"module"}