{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useBetween } from 'use-between';\nimport { ShareablePopSizeState } from './PopSlider.js';\nimport { ShareableProbeParams } from './Buttons.js';\nimport NodeFetch from 'node-fetch';\nconst endPointAddress = 'http://127.0.0.1:8000'; // TODO: Use environment variable\n\nexport const ShareableRunningState = () => {\n  _s();\n\n  const [running, setRunning] = useState(false);\n  return {\n    running,\n    setRunning\n  };\n};\n\n_s(ShareableRunningState, \"GqSjlWMyRcFSNk6JAdDkMp9357M=\");\n\n_c = ShareableRunningState;\nexport const ShareableFinishedState = () => {\n  _s2();\n\n  const [finished, setFinished] = useState(false);\n  return {\n    finished,\n    setFinished\n  };\n};\n\n_s2(ShareableFinishedState, \"mZBoEqN32gr4012eGv/dCEBa7uo=\");\n\n_c2 = ShareableFinishedState;\nexport const ShareableOutputState = () => {\n  _s3();\n\n  const [output, setOutput] = useState(null);\n  return {\n    output,\n    setOutput\n  };\n};\n\n_s3(ShareableOutputState, \"ppWByPgNJ+PeYTAdgwjKOSbvJUE=\");\n\n_c3 = ShareableOutputState;\nexport const ShareableWarningState = () => {\n  _s4();\n\n  const [warning, setWarning] = useState('');\n  return {\n    warning,\n    setWarning\n  };\n};\n\n_s4(ShareableWarningState, \"QgWVaa52qMHZiqsy7aSwVP0Ecac=\");\n\n_c4 = ShareableWarningState;\n\nasync function runOptimizer(probeParams, popSize) {\n  var endPoint = endPointAddress.concat('/start_optimizer');\n  return NodeFetch(endPoint, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      'probeParams': probeParams,\n      'popSize': popSize\n    })\n  }).then(response => {\n    if (response.status >= 400) {\n      throw new Error('Bad response from server');\n    }\n  }).then(function (response) {\n    return response.json();\n  });\n}\n\n;\n\nconst Optimizer = () => {\n  _s5();\n\n  const {\n    probeParams\n  } = useBetween(ShareableProbeParams);\n  const {\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    setFinished\n  } = useBetween(ShareableFinishedState);\n  const {\n    setOutput\n  } = useBetween(ShareableOutputState);\n  const {\n    popSize\n  } = useBetween(ShareablePopSizeState);\n  const {\n    setWarning\n  } = useBetween(ShareableWarningState); // Run on mount\n\n  useEffect(() => {\n    let success = true;\n    runOptimizer(probeParams, popSize).then(output => {\n      if (success) {\n        setOutput(output);\n        setFinished(true);\n        setRunning(false);\n      }\n    }).catch(err => {\n      setFinished(false);\n      setRunning(false);\n      setWarning('An error occurred when connecting to the server. Please try again.');\n    });\n    return () => success = false; // eslint-disable-next-line \n  }, []);\n  return null;\n};\n\n_s5(Optimizer, \"jNv4ZMxHB414ithXKOd/zQIPIoQ=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c5 = Optimizer;\nexport default Optimizer;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ShareableRunningState\");\n$RefreshReg$(_c2, \"ShareableFinishedState\");\n$RefreshReg$(_c3, \"ShareableOutputState\");\n$RefreshReg$(_c4, \"ShareableWarningState\");\n$RefreshReg$(_c5, \"Optimizer\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Optimizer.js"],"names":["useState","useEffect","useBetween","ShareablePopSizeState","ShareableProbeParams","NodeFetch","endPointAddress","ShareableRunningState","running","setRunning","ShareableFinishedState","finished","setFinished","ShareableOutputState","output","setOutput","ShareableWarningState","warning","setWarning","runOptimizer","probeParams","popSize","endPoint","concat","headers","method","body","JSON","stringify","then","response","status","Error","json","Optimizer","success","catch","err"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,eAAe,GAAG,uBAAxB,C,CAAiD;;AAEjD,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,SAAO;AACHQ,IAAAA,OADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CANM;;GAAMF,qB;;KAAAA,qB;AAQb,OAAO,MAAMG,sBAAsB,GAAG,MAAM;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,SAAO;AACHW,IAAAA,QADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CANM;;IAAMF,sB;;MAAAA,sB;AAQb,OAAO,MAAMG,oBAAoB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,SAAO;AACHc,IAAAA,MADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CANM;;IAAMF,oB;;MAAAA,oB;AAQb,OAAO,MAAMG,qBAAqB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,SAAO;AACHiB,IAAAA,OADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CANM;;IAAMF,qB;;MAAAA,qB;;AAQb,eAAeG,YAAf,CAA4BC,WAA5B,EAAyCC,OAAzC,EAAkD;AAC9C,MAAIC,QAAQ,GAAGhB,eAAe,CAACiB,MAAhB,CAAuB,kBAAvB,CAAf;AACA,SAAOlB,SAAS,CAACiB,QAAD,EAChB;AACIE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KADb;AAEIC,IAAAA,MAAM,EAAE,MAFZ;AAGIC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,qBAAeR,WAAhB;AAA6B,iBAAWC;AAAxC,KAAf;AAHV,GADgB,CAAT,CAKJQ,IALI,CAKCC,QAAQ,IAAI;AAChB,QAAGA,QAAQ,CAACC,MAAT,IAAmB,GAAtB,EAA2B;AACvB,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ,GATM,EASJH,IATI,CASC,UAAUC,QAAV,EAAoB;AACxB,WAAOA,QAAQ,CAACG,IAAT,EAAP;AACH,GAXM,CAAP;AAYH;;AAAA;;AAED,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEd,IAAAA;AAAF,MAAkBlB,UAAU,CAACE,oBAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAiBP,UAAU,CAACK,qBAAD,CAAjC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBV,UAAU,CAACQ,sBAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAgBb,UAAU,CAACW,oBAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcnB,UAAU,CAACC,qBAAD,CAA9B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAiBhB,UAAU,CAACc,qBAAD,CAAjC,CAPoB,CASpB;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkC,OAAO,GAAG,IAAd;AACAhB,IAAAA,YAAY,CAACC,WAAD,EAAcC,OAAd,CAAZ,CACCQ,IADD,CACMf,MAAM,IAAI;AACZ,UAAGqB,OAAH,EAAY;AACRpB,QAAAA,SAAS,CAACD,MAAD,CAAT;AACAF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAPD,EAOG2B,KAPH,CAOSC,GAAG,IAAI;AACZzB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,UAAU,CAAC,oEAAD,CAAV;AACH,KAXD;AAYA,WAAO,MAAMiB,OAAO,GAAG,KAAvB,CAdY,CAehB;AACC,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO,IAAP;AACH,CA7BD;;IAAMD,S;UAEsBhC,U,EACDA,U,EACCA,U,EACFA,U,EACFA,U,EACGA,U;;;MAPrBgC,S;AA+BN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useBetween } from 'use-between';\nimport { ShareablePopSizeState } from './PopSlider.js';\nimport { ShareableProbeParams } from './Buttons.js';  \nimport NodeFetch from 'node-fetch';\n\nconst endPointAddress = 'http://127.0.0.1:8000'; // TODO: Use environment variable\n\nexport const ShareableRunningState = () => {\n    const [running, setRunning] = useState(false);\n    return {\n        running,\n        setRunning\n    };\n};\n\nexport const ShareableFinishedState = () => {\n    const [finished, setFinished] = useState(false);\n    return {\n        finished,\n        setFinished\n    };\n};\n\nexport const ShareableOutputState = () => {\n    const [output, setOutput] = useState(null);\n    return {\n        output,\n        setOutput\n    };    \n};\n\nexport const ShareableWarningState = () => {\n    const [warning, setWarning] = useState('');\n    return {\n        warning,\n        setWarning\n    };    \n};\n\nasync function runOptimizer(probeParams, popSize) {\n    var endPoint = endPointAddress.concat('/start_optimizer');\n    return NodeFetch(endPoint,\n    {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        body: JSON.stringify({'probeParams': probeParams, 'popSize': popSize})\n    }).then(response => {\n        if(response.status >= 400) {\n            throw new Error('Bad response from server')\n        }\n    }).then(function (response) {\n        return response.json();\n    })\n};\n\nconst Optimizer = () => {\n\n    const { probeParams } = useBetween(ShareableProbeParams);\n    const { setRunning } = useBetween(ShareableRunningState);\n    const { setFinished } = useBetween(ShareableFinishedState);\n    const { setOutput } = useBetween(ShareableOutputState);\n    const { popSize } = useBetween(ShareablePopSizeState);\n    const { setWarning } = useBetween(ShareableWarningState);\n\n    // Run on mount\n    useEffect(() => {\n        let success = true\n        runOptimizer(probeParams, popSize)\n        .then(output => {\n            if(success) {\n                setOutput(output);\n                setFinished(true);\n                setRunning(false);\n            }\n        }).catch(err => {\n            setFinished(false);\n            setRunning(false);\n            setWarning('An error occurred when connecting to the server. Please try again.');\n        })\n        return () => success = false;\n    // eslint-disable-next-line \n    }, []);\n\n    return null;\n};\n\nexport default Optimizer;"]},"metadata":{},"sourceType":"module"}