[{"/home/leland/MLPractice/snp-lamp-design/react-app/src/index.js":"1","/home/leland/MLPractice/snp-lamp-design/react-app/src/reportWebVitals.js":"2","/home/leland/MLPractice/snp-lamp-design/react-app/src/App.js":"3","/home/leland/MLPractice/snp-lamp-design/react-app/src/SequenceEntry.js":"4","/home/leland/MLPractice/snp-lamp-design/react-app/src/ConditionEntry.js":"5","/home/leland/MLPractice/snp-lamp-design/react-app/src/PopSlider.js":"6","/home/leland/MLPractice/snp-lamp-design/react-app/src/Buttons.js":"7","/home/leland/MLPractice/snp-lamp-design/react-app/src/Output.js":"8","/home/leland/MLPractice/snp-lamp-design-client/src/index.js":"9","/home/leland/MLPractice/snp-lamp-design-client/src/App.js":"10","/home/leland/MLPractice/snp-lamp-design-client/src/reportWebVitals.js":"11","/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js":"12","/home/leland/MLPractice/snp-lamp-design-client/src/PopSlider.js":"13","/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js":"14","/home/leland/MLPractice/snp-lamp-design-client/src/ConditionEntry.js":"15","/home/leland/MLPractice/snp-lamp-design-client/src/Output.js":"16","/home/leland/MLPractice/snp-lamp-design-client/src/Optimizer.js":"17","/home/leland/MLPractice/snp-lamp-design-client/src/useInterval.js":"18"},{"size":500,"mtime":1619815956742,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1619815956742,"results":"21","hashOfConfig":"20"},{"size":445,"mtime":1619815956742,"results":"22","hashOfConfig":"20"},{"size":1069,"mtime":1619815956742,"results":"23","hashOfConfig":"20"},{"size":1852,"mtime":1619815956742,"results":"24","hashOfConfig":"20"},{"size":1453,"mtime":1619815956742,"results":"25","hashOfConfig":"20"},{"size":2429,"mtime":1619815956742,"results":"26","hashOfConfig":"20"},{"size":3874,"mtime":1619815956742,"results":"27","hashOfConfig":"20"},{"size":500,"mtime":1619815956742,"results":"28","hashOfConfig":"29"},{"size":473,"mtime":1624482716483,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1619815956742,"results":"31","hashOfConfig":"29"},{"size":3982,"mtime":1624031878045,"results":"32","hashOfConfig":"29"},{"size":1320,"mtime":1624029686066,"results":"33","hashOfConfig":"29"},{"size":1521,"mtime":1624029692394,"results":"34","hashOfConfig":"29"},{"size":2309,"mtime":1624029924436,"results":"35","hashOfConfig":"29"},{"size":2062,"mtime":1624561138863,"results":"36","hashOfConfig":"29"},{"size":5166,"mtime":1624565972540,"results":"37","hashOfConfig":"29"},{"size":492,"mtime":1624564081689,"results":"38","hashOfConfig":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ofzhza",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"13fbzie",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/leland/MLPractice/snp-lamp-design/react-app/src/index.js",[],"/home/leland/MLPractice/snp-lamp-design/react-app/src/reportWebVitals.js",[],"/home/leland/MLPractice/snp-lamp-design/react-app/src/App.js",[],"/home/leland/MLPractice/snp-lamp-design/react-app/src/SequenceEntry.js",["79","80"],"import { useState } from 'react';\nimport NodeFetch from 'node-fetch';\n\nconst SequenceEntry = () => {\n\n    const [WT, setWT] = useState();\n    const [SNP, setSNP] = useState();\n\n    const sendUpdate = (data) => {\n        NodeFetch('http://127.0.0.1:5000/send_input', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data)\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    return (\n        <div className=\"sequenceentry\">\n            <div class=\"seq-form\" id=\"non-mut-form\">\n                <label for=\"non-mut\">WT Sequence</label>\n                <input type=\"text\" value={WT} id=\"non-mut\" name=\"non-mut\" onChange={i => sendUpdate({'WT': i.target.value})} />\n            </div>\n            <div class=\"seq-form\" id=\"mut-form\">\n                <label for=\"mut\">Mutated Sequence</label>\n                <input type=\"text\" value={SNP} id=\"mut\" name=\"mut\" onChange={j => sendUpdate({'SNP': j.target.value})} />\n            </div>\n        </div>\n    );\n};\n\nexport default SequenceEntry;","/home/leland/MLPractice/snp-lamp-design/react-app/src/ConditionEntry.js",[],"/home/leland/MLPractice/snp-lamp-design/react-app/src/PopSlider.js",[],"/home/leland/MLPractice/snp-lamp-design/react-app/src/Buttons.js",["81"],"import Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport NodeFetch from 'node-fetch';\n\n\nconst Buttons = () => {\n\n    const [running, setRunning] = useState(false);\n\n    const getProgress = () => {\n        NodeFetch('http://127.0.0.1:5000/get_progress',\n            {\n                headers: { 'Content-Type': 'application/json' },\n                method: 'POST',\n                body: ''\n            }).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                setRunning(json.running);\n            })\n    }\n\n    const getOutput = () => {\n        NodeFetch('http://127.0.0.1:5000/get_output',\n            {\n                headers: { 'Content-Type': 'application/json' },\n                method: 'POST',\n                body: ''\n            }).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                if(running && json.finished) {\n                    setRunning(false);\n                }\n            })\n    }\n\n    const sendStart = () => {\n        NodeFetch('http://127.0.0.1:5000/start_optimizer', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST'\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    const sendStop = () => {\n        NodeFetch('http://127.0.0.1:5000/stop_optimizer', \n\t\t{headers: {'Content-Type': 'application/json'},\n\t\tmethod: 'POST'\n        }).then(function (response) {\n            return response.text();\n        })\n    }\n\n    const handleStart = () => {\n        setRunning(true);\n        sendStart();\n    }\n\n    const handleStop = () => {\n        setRunning(false);\n        sendStop();\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            getProgress();\n            getOutput();\n        }, 1000);\n        return () => {\n          clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={handleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={handleStop}>\n                Stop\n            </Button>\n        </div>\n    );\n};\n\nexport default Buttons;","/home/leland/MLPractice/snp-lamp-design/react-app/src/Output.js",["82"],"import PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport NodeFetch from 'node-fetch';\nfunction CircularProgressWithLabel(props) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={130}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <label for='progress label' className='proglabel'>{props.value}%</label>\n            </Box>\n        </Box>\n    );\n}\nCircularProgressWithLabel.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\n// Kill all running intervals\nvar killId = setTimeout(function () {\n    for (var i = killId; i > 0; i--) {\n        clearInterval(i);\n    }\n}, 3000);\n\nconst Output = () => {\n    const [running, setRunning] = useState(false);\n    const [finished, setFinished] = useState(false);\n    const [progress, updateProgress] = useState(0);\n    const [output, updateOutput] = useState({ finished: false});\n\n    const getProgress = () => {\n        NodeFetch('http://127.0.0.1:5000/get_progress',\n            {\n                headers: { 'Content-Type': 'application/json' },\n                method: 'POST',\n                body: ''\n            }).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                updateProgress(parseInt(json.progress));\n                setRunning(json.running);\n            })\n    }\n\n    const getOutput = () => {\n        NodeFetch('http://127.0.0.1:5000/get_output',\n            {\n                headers: { 'Content-Type': 'application/json' },\n                method: 'POST',\n                body: ''\n            }).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                updateOutput(json);\n                if (output.hasOwnProperty('sinkC')) {\n                    var output_copy = output;\n                    if (output_copy['sinkC'].length < 7 || output_copy['sinkC'] === 'None Required') {\n                        output_copy['sinkC'] = 'None Required';\n                        updateOutput(output_copy);\n                    }\n                }\n                setFinished(json.finished);\n            })\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            getProgress();\n            getOutput();\n        }, 1000);\n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    if (running) {\n        return (\n            <div className=\"progress\">\n                <h2>Optimization in Progress...</h2>\n                <CircularProgressWithLabel variant=\"determinate\" size='150px' value={progress} className=\"progressbar\" />\n            </div>\n        );\n    }\n    else if (finished) {\n        return (\n            <div className=\"outputsequences\">\n                <h2>Output</h2>\n                <div className=\"sequencelabels\">\n                    <p>ProbeF: </p>\n                    <p>ProbeQ: </p>\n                    <p>Sink: </p>\n                    <p>Sink*: </p>\n                </div>\n                <div className=\"outsequences\">\n                    <p>{output['probeF']}</p>\n                    <p>{output['probeQ']}</p>\n                    <p>{output['sink']}</p>\n                    <p>{output['sinkC']}</p>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"emptyoutput\">\n                <h2>Output</h2>\n            </div>\n        );\n    }\n\n};\n\nexport default Output;","/home/leland/MLPractice/snp-lamp-design-client/src/index.js",[],["83","84"],"/home/leland/MLPractice/snp-lamp-design-client/src/App.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/reportWebVitals.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/PopSlider.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/SequenceEntry.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/ConditionEntry.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/Output.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/Optimizer.js",[],"/home/leland/MLPractice/snp-lamp-design-client/src/useInterval.js",[],{"ruleId":"85","severity":1,"message":"86","line":6,"column":16,"nodeType":"87","messageId":"88","endLine":6,"endColumn":21},{"ruleId":"85","severity":1,"message":"89","line":7,"column":17,"nodeType":"87","messageId":"88","endLine":7,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":75,"column":8,"nodeType":"92","endLine":75,"endColumn":10,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"91","line":86,"column":10,"nodeType":"92","endLine":86,"endColumn":12,"suggestions":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},"no-unused-vars","'setWT' is assigned a value but never used.","Identifier","unusedVar","'setSNP' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOutput'. Either include it or remove the dependency array.","ArrayExpression",["99"],["100"],"no-native-reassign",["101"],"no-negated-in-lhs",["102"],{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getOutput]",{"range":"106","text":"107"},{"range":"108","text":"107"},[1985,1987],"[getOutput]",[2797,2799]]