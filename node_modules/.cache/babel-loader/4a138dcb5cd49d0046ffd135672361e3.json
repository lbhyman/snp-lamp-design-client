{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareablePopSizeState } from './PopSlider.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = () => {\n  _s();\n\n  const {\n    running,\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    temperature,\n    setTemperature\n  } = useBetween(ShareableTemperatureState);\n  const {\n    sodium,\n    setSodium\n  } = useBetween(ShareableSodiumState);\n  const {\n    magnesium,\n    setMagnesium\n  } = useBetween(ShareableMagnesiumState);\n  const {\n    popSize,\n    setPopSize\n  } = useBetween(ShareablePopSizeState);\n  const {\n    WT_seq,\n    setWT\n  } = useBetween(ShareableWTState);\n  const {\n    SNP_seq,\n    setSNP\n  } = useBetween(ShareableSNPState); //var optimizer;\n\n  var probe_params = {\n    WT: WT_seq,\n    SNP: SNP_seq,\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: parseFloat(temperature),\n      sodium: parseFloat(sodium) / 1000.0,\n      magnesium: parseFloat(magnesium) / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n\n  const handleStart = (event, newValue) => {\n    //optimizer = Optimizer(probe_params, popSize);\n    setRunning(true); //optimizer.run();\n  };\n\n  const handleStop = (event, newValue) => {\n    setRunning(false); //optimizer.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"startstopbuttons\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"startbutton\",\n      variant: \"contained\",\n      disabled: running,\n      color: \"primary\",\n      onClick: handleStart,\n      children: \"Optimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stopbutton\",\n      variant: \"contained\",\n      disabled: !running,\n      color: \"default\",\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Buttons, \"+dwZJqVhkG1KpNpMDs7WcMYk7Jk=\", false, function () {\n  return [useBetween, useBetween, useBetween, useBetween, useBetween, useBetween, useBetween];\n});\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js"],"names":["React","ShareableRunningState","ShareableTemperatureState","ShareableSodiumState","ShareableMagnesiumState","ShareablePopSizeState","ShareableWTState","ShareableSNPState","Optimizer","Button","useBetween","Buttons","running","setRunning","temperature","setTemperature","sodium","setSodium","magnesium","setMagnesium","popSize","setPopSize","WT_seq","setWT","SNP_seq","setSNP","probe_params","WT","SNP","minlength","mut_rate","concentrations","non_mut_target","mut_target","probeF","probeQ","sink","sinkC","params","parseFloat","beta","truncations","handleStart","event","newValue","handleStop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ShareableRunningState } from './Optimizer.js';\nimport { ShareableTemperatureState, ShareableSodiumState, ShareableMagnesiumState } from './ConditionEntry.js';\nimport { ShareablePopSizeState } from './PopSlider.js';\nimport { ShareableWTState, ShareableSNPState } from './SequenceEntry.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useBetween } from 'use-between';\n\nconst Buttons = () => {\n\n    const { running, setRunning } = useBetween(ShareableRunningState);\n    const { temperature, setTemperature } = useBetween(ShareableTemperatureState);\n    const { sodium, setSodium } = useBetween(ShareableSodiumState);\n    const { magnesium, setMagnesium } = useBetween(ShareableMagnesiumState);\n    const { popSize, setPopSize } = useBetween(ShareablePopSizeState);\n    const { WT_seq, setWT } = useBetween(ShareableWTState);\n    const { SNP_seq, setSNP } = useBetween(ShareableSNPState);\n    //var optimizer;\n    var probe_params = {\n        WT:WT_seq,\n        SNP:SNP_seq,\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:parseFloat(temperature), sodium:parseFloat(sodium)/1000.0, magnesium:parseFloat(magnesium)/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n\n    const handleStart = (event, newValue) => {\n        //optimizer = Optimizer(probe_params, popSize);\n        setRunning(true);\n        //optimizer.run();\n    };\n    const handleStop = (event, newValue) => {\n        setRunning(false);\n        //optimizer.reset();\n    };\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={handleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={handleStop}>\n                Stop\n            </Button>\n        </div>\n    );\n};\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}