{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Output.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ShareableRunningState, ShareableFinishedState, ShareableOutputState } from './Optimizer.js';\nimport { LoaderDots } from '@thumbtack/thumbprint-react';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Output = () => {\n  _s();\n\n  const {\n    running\n  } = useBetween(ShareableRunningState);\n  const {\n    finished\n  } = useBetween(ShareableFinishedState);\n  const {\n    output\n  } = useBetween(ShareableOutputState);\n\n  if (running) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Optimization in Progress...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoaderDots, {\n        size: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  } else if (finished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputsequences\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sequencelabels\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ProbeF: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ProbeQ: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sink: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sink*: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outsequences\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: output['probeF']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: output['probeQ']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: output['sink']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: output['sinkC']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emptyoutput\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Output, \"RYiByM9tyeeBGRlnVq4Fuxg84fE=\", false, function () {\n  return [useBetween, useBetween, useBetween];\n});\n\n_c = Output;\nexport default Output;\n\nvar _c;\n\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Output.js"],"names":["React","ShareableRunningState","ShareableFinishedState","ShareableOutputState","LoaderDots","useBetween","Output","running","finished","output"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,EAAwDC,oBAAxD,QAAoF,gBAApF;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcF,UAAU,CAACJ,qBAAD,CAA9B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeH,UAAU,CAACH,sBAAD,CAA/B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaJ,UAAU,CAACF,oBAAD,CAA7B;;AAEA,MAAII,OAAJ,EAAa;AACT,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,MAQK,IAAIC,QAAJ,EAAc;AACf,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAA,oBAAIC,MAAM,CAAC,QAAD;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIA,MAAM,CAAC,QAAD;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAIA,MAAM,CAAC,MAAD;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAIA,MAAM,CAAC,OAAD;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAlBI,MAmBA;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AAEJ,CAxCD;;GAAMH,M;UACkBD,U,EACCA,U,EACFA,U;;;KAHjBC,M;AA0CN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { ShareableRunningState, ShareableFinishedState, ShareableOutputState } from './Optimizer.js';\nimport { LoaderDots } from '@thumbtack/thumbprint-react';\nimport { useBetween } from 'use-between';\n\nconst Output = () => {\n    const { running } = useBetween(ShareableRunningState)\n    const { finished } = useBetween(ShareableFinishedState)\n    const { output } = useBetween(ShareableOutputState)\n\n    if (running) {\n        return (\n            <div className=\"progress\">\n                <h2>Optimization in Progress...</h2>\n                <LoaderDots size=\"medium\" />\n            </div>\n        );\n    }\n    else if (finished) {\n        return (\n            <div className=\"outputsequences\">\n                <h2>Output</h2>\n                <div className=\"sequencelabels\">\n                    <p>ProbeF: </p>\n                    <p>ProbeQ: </p>\n                    <p>Sink: </p>\n                    <p>Sink*: </p>\n                </div>\n                <div className=\"outsequences\">\n                    <p>{output['probeF']}</p>\n                    <p>{output['probeQ']}</p>\n                    <p>{output['sink']}</p>\n                    <p>{output['sinkC']}</p>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"emptyoutput\">\n                <h2>Output</h2>\n            </div>\n        );\n    }\n\n};\n\nexport default Output;"]},"metadata":{},"sourceType":"module"}