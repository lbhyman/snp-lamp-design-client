{"ast":null,"code":"var _jsxFileName = \"/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ShareableRunningState, ShareableOutputState, ShareableFinishedState } from './Optimizer.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShareableProbeParams = () => {\n  _s();\n\n  var params = {\n    WT: '',\n    SNP: '',\n    minlength: 6,\n    mut_rate: 0.5,\n    concentrations: {\n      non_mut_target: 1e-7,\n      mut_target: 1e-7,\n      probeF: 1e-7,\n      probeQ: 1e-7,\n      sink: 1e-7,\n      sinkC: 1e-7\n    },\n    params: {\n      temperature: 21.0,\n      sodium: 65.0 / 1000.0,\n      magnesium: 8.0 / 1000.0\n    },\n    beta: [0, 0, 0, 0],\n    truncations: []\n  };\n  const [probeParams, setProbeParams] = useState(params);\n  return {\n    probeParams,\n    setProbeParams\n  };\n};\n\n_s(ShareableProbeParams, \"qUu6jFvarJdQVfrVaYefSqCGWeg=\");\n\n_c = ShareableProbeParams;\n\nconst Buttons = () => {\n  _s2();\n\n  const {\n    running,\n    setRunning\n  } = useBetween(ShareableRunningState);\n  const {\n    setOutput\n  } = useBetween(ShareableOutputState);\n  const {\n    setFinished\n  } = useBetween(ShareableFinishedState);\n\n  const HandleStart = () => {\n    setFinished(false);\n    setOutput(null);\n    setRunning(true);\n  };\n\n  const HandleStop = () => {\n    setRunning(false);\n    setOutput(null);\n    setFinished(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"startstopbuttons\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"startbutton\",\n      variant: \"contained\",\n      disabled: running,\n      color: \"primary\",\n      onClick: HandleStart,\n      children: \"Optimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"stopbutton\",\n      variant: \"contained\",\n      disabled: !running,\n      color: \"default\",\n      onClick: HandleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), running && /*#__PURE__*/_jsxDEV(Optimizer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Buttons, \"EeeDnstDP0ELfjfF0xUbDCYPbtk=\", false, function () {\n  return [useBetween, useBetween, useBetween];\n});\n\n_c2 = Buttons;\nexport default Buttons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShareableProbeParams\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"sources":["/home/leland/MLPractice/snp-lamp-design-client/src/Buttons.js"],"names":["ShareableRunningState","ShareableOutputState","ShareableFinishedState","Optimizer","Button","useState","useBetween","ShareableProbeParams","params","WT","SNP","minlength","mut_rate","concentrations","non_mut_target","mut_target","probeF","probeQ","sink","sinkC","temperature","sodium","magnesium","beta","truncations","probeParams","setProbeParams","Buttons","running","setRunning","setOutput","setFinished","HandleStart","HandleStop"],"mappings":";;;;AAAA,SAASA,qBAAT,EAAgCC,oBAAhC,EAAsDC,sBAAtD,QAAoF,gBAApF;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACtC,MAAIC,MAAM,GAAG;AACTC,IAAAA,EAAE,EAAC,EADM;AAETC,IAAAA,GAAG,EAAC,EAFK;AAGTC,IAAAA,SAAS,EAAC,CAHD;AAITC,IAAAA,QAAQ,EAAC,GAJA;AAKTC,IAAAA,cAAc,EAAC;AAACC,MAAAA,cAAc,EAAC,IAAhB;AAAsBC,MAAAA,UAAU,EAAC,IAAjC;AAAuCC,MAAAA,MAAM,EAAC,IAA9C;AAAoDC,MAAAA,MAAM,EAAC,IAA3D;AAAiEC,MAAAA,IAAI,EAAC,IAAtE;AAA4EC,MAAAA,KAAK,EAAC;AAAlF,KALN;AAMTX,IAAAA,MAAM,EAAC;AAACY,MAAAA,WAAW,EAAC,IAAb;AAAmBC,MAAAA,MAAM,EAAC,OAAK,MAA/B;AAAuCC,MAAAA,SAAS,EAAC,MAAI;AAArD,KANE;AAOTC,IAAAA,IAAI,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAPI;AAQTC,IAAAA,WAAW,EAAC;AARH,GAAb;AAUA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAACG,MAAD,CAA9C;AACA,SAAO;AACHiB,IAAAA,WADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CAhBM;;GAAMnB,oB;;KAAAA,oB;;AAkBb,MAAMoB,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BvB,UAAU,CAACN,qBAAD,CAA1C;AACA,QAAM;AAAE8B,IAAAA;AAAF,MAAgBxB,UAAU,CAACL,oBAAD,CAAhC;AACA,QAAM;AAAE8B,IAAAA;AAAF,MAAkBzB,UAAU,CAACJ,sBAAD,CAAlC;;AAEA,QAAM8B,WAAW,GAAG,MAAM;AACtBD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAJD;;AAMA,QAAMI,UAAU,GAAG,MAAM;AACrBJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAC,WAAxC;AAAoD,MAAA,QAAQ,EAAEH,OAA9D;AAAuE,MAAA,KAAK,EAAC,SAA7E;AAAuF,MAAA,OAAO,EAAEI,WAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAC,WAAvC;AAAmD,MAAA,QAAQ,EAAE,CAACJ,OAA9D;AAAuE,MAAA,KAAK,EAAC,SAA7E;AAAuF,MAAA,OAAO,EAAEK,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOKL,OAAO,iBAAI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;IAAMD,O;UAE8BrB,U,EACVA,U,EACEA,U;;;MAJtBqB,O;AA+BN,eAAeA,OAAf","sourcesContent":["import { ShareableRunningState, ShareableOutputState, ShareableFinishedState } from './Optimizer.js';\nimport Optimizer from './Optimizer.js';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { useBetween } from 'use-between';\n\nexport const ShareableProbeParams = () => {\n    var params = {\n        WT:'',\n        SNP:'',\n        minlength:6,\n        mut_rate:0.5,\n        concentrations:{non_mut_target:1e-7, mut_target:1e-7, probeF:1e-7, probeQ:1e-7, sink:1e-7, sinkC:1e-7},\n        params:{temperature:21.0, sodium:65.0/1000.0, magnesium:8.0/1000.0},\n        beta:[0,0,0,0],\n        truncations:[]\n    };\n    const [probeParams, setProbeParams] = useState(params);\n    return {\n        probeParams,\n        setProbeParams\n    };\n};\n\nconst Buttons = () => {\n\n    const { running, setRunning } = useBetween(ShareableRunningState);\n    const { setOutput } = useBetween(ShareableOutputState);\n    const { setFinished } = useBetween(ShareableFinishedState);\n\n    const HandleStart = () => {\n        setFinished(false);\n        setOutput(null);\n        setRunning(true);\n    };\n\n    const HandleStop = () => {\n        setRunning(false);\n        setOutput(null);\n        setFinished(false);\n    };\n\n    return (\n        <div className=\"startstopbuttons\">\n            <Button className='startbutton' variant=\"contained\" disabled={running} color=\"primary\" onClick={HandleStart}>\n                Optimize\n            </Button>\n            <Button className='stopbutton' variant=\"contained\" disabled={!running} color=\"default\" onClick={HandleStop}>\n                Stop\n            </Button>\n            {running && <Optimizer />}\n        </div>\n    )\n};\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}